[{"C:\\Users\\Zabilsya\\Desktop\\Cursovaya\\Calendar\\client\\src\\index.js":"1","C:\\Users\\Zabilsya\\Desktop\\Cursovaya\\Calendar\\client\\src\\App.js":"2","C:\\Users\\Zabilsya\\Desktop\\Cursovaya\\Calendar\\client\\src\\reportWebVitals.js":"3","C:\\Users\\Zabilsya\\Desktop\\Cursovaya\\Calendar\\client\\src\\routes.js":"4","C:\\Users\\Zabilsya\\Desktop\\Cursovaya\\Calendar\\client\\src\\hooks\\auth.hook.js":"5","C:\\Users\\Zabilsya\\Desktop\\Cursovaya\\Calendar\\client\\src\\hooks\\schedule.hook.js":"6","C:\\Users\\Zabilsya\\Desktop\\Cursovaya\\Calendar\\client\\src\\context\\AuthContext.js":"7","C:\\Users\\Zabilsya\\Desktop\\Cursovaya\\Calendar\\client\\src\\context\\ScheduleContext.js":"8","C:\\Users\\Zabilsya\\Desktop\\Cursovaya\\Calendar\\client\\src\\Components\\Navigation\\Navigation.js":"9","C:\\Users\\Zabilsya\\Desktop\\Cursovaya\\Calendar\\client\\src\\hooks\\request.hook.js":"10","C:\\Users\\Zabilsya\\Desktop\\Cursovaya\\Calendar\\client\\src\\pages\\PersonalInfoPage\\PersonalInfoPage.js":"11","C:\\Users\\Zabilsya\\Desktop\\Cursovaya\\Calendar\\client\\src\\pages\\SupportPage\\SupportPage.js":"12","C:\\Users\\Zabilsya\\Desktop\\Cursovaya\\Calendar\\client\\src\\pages\\CalendarPage\\CalendarPage.js":"13","C:\\Users\\Zabilsya\\Desktop\\Cursovaya\\Calendar\\client\\src\\pages\\AuthPage\\AuthPage.js":"14","C:\\Users\\Zabilsya\\Desktop\\Cursovaya\\Calendar\\client\\src\\pages\\PostgraduatesInfoPage\\PostgraduatesInfoPage.js":"15","C:\\Users\\Zabilsya\\Desktop\\Cursovaya\\Calendar\\client\\src\\URLs.js":"16","C:\\Users\\Zabilsya\\Desktop\\Cursovaya\\Calendar\\client\\src\\hooks\\students.hook.js":"17","C:\\Users\\Zabilsya\\Desktop\\Cursovaya\\Calendar\\client\\src\\pages\\CalendarPage\\CalendarHeader\\CalendarHeader.js":"18","C:\\Users\\Zabilsya\\Desktop\\Cursovaya\\Calendar\\client\\src\\pages\\PostgraduatesInfoPage\\PostgraduatesTable\\PostgraduatesTable.js":"19","C:\\Users\\Zabilsya\\Desktop\\Cursovaya\\Calendar\\client\\src\\pages\\CalendarPage\\CalendarGrid\\CalendarGrid.js":"20","C:\\Users\\Zabilsya\\Desktop\\Cursovaya\\Calendar\\client\\src\\Components\\ModalStudent\\ModalStudent.js":"21","C:\\Users\\Zabilsya\\Desktop\\Cursovaya\\Calendar\\client\\src\\pages\\CalendarPage\\CalendarDay\\CalendarDay.js":"22","C:\\Users\\Zabilsya\\Desktop\\Cursovaya\\Calendar\\client\\src\\pages\\PostgraduatesInfoPage\\PostgraduatesTable\\PostgraduatesTableElement\\PostgraduatesTableElement.js":"23","C:\\Users\\Zabilsya\\Desktop\\Cursovaya\\Calendar\\client\\src\\Components\\Student\\Student.js":"24","C:\\Users\\Zabilsya\\Desktop\\Cursovaya\\Calendar\\client\\src\\Components\\ModalEvents\\ModalEvents.js":"25","C:\\Users\\Zabilsya\\Desktop\\Cursovaya\\Calendar\\client\\src\\Components\\Event\\Event.js":"26","C:\\Users\\Zabilsya\\Desktop\\Cursovaya\\Calendar\\client\\src\\Components\\Dropdown\\Dropdown.js":"27","C:\\Users\\Zabilsya\\Desktop\\Cursovaya\\Calendar\\client\\src\\scripts\\script.js":"28","C:\\Users\\Zabilsya\\Desktop\\Cursovaya\\Calendar\\client\\src\\data\\eventTypes.js":"29"},{"size":494,"mtime":1615310821448,"results":"30","hashOfConfig":"31"},{"size":1110,"mtime":1615725370638,"results":"32","hashOfConfig":"31"},{"size":375,"mtime":1615310821455,"results":"33","hashOfConfig":"31"},{"size":1367,"mtime":1615629532626,"results":"34","hashOfConfig":"31"},{"size":990,"mtime":1615567314276,"results":"35","hashOfConfig":"31"},{"size":1338,"mtime":1615817705538,"results":"36","hashOfConfig":"31"},{"size":199,"mtime":1615310821446,"results":"37","hashOfConfig":"31"},{"size":123,"mtime":1615725195663,"results":"38","hashOfConfig":"31"},{"size":1320,"mtime":1615629518915,"results":"39","hashOfConfig":"31"},{"size":816,"mtime":1615742630738,"results":"40","hashOfConfig":"31"},{"size":159,"mtime":1615310821454,"results":"41","hashOfConfig":"31"},{"size":148,"mtime":1615310821455,"results":"42","hashOfConfig":"31"},{"size":877,"mtime":1615822203061,"results":"43","hashOfConfig":"31"},{"size":2126,"mtime":1615567208909,"results":"44","hashOfConfig":"31"},{"size":2212,"mtime":1615672445497,"results":"45","hashOfConfig":"31"},{"size":260,"mtime":1615367661312,"results":"46","hashOfConfig":"31"},{"size":1411,"mtime":1615742917754,"results":"47","hashOfConfig":"31"},{"size":1695,"mtime":1615310821452,"results":"48","hashOfConfig":"31"},{"size":1958,"mtime":1615672853984,"results":"49","hashOfConfig":"31"},{"size":1519,"mtime":1615804331303,"results":"50","hashOfConfig":"31"},{"size":1461,"mtime":1615667776025,"results":"51","hashOfConfig":"31"},{"size":1839,"mtime":1615822482242,"results":"52","hashOfConfig":"31"},{"size":844,"mtime":1615672867189,"results":"53","hashOfConfig":"31"},{"size":2745,"mtime":1615802535272,"results":"54","hashOfConfig":"31"},{"size":2149,"mtime":1615815498809,"results":"55","hashOfConfig":"31"},{"size":5740,"mtime":1615804249953,"results":"56","hashOfConfig":"31"},{"size":598,"mtime":1615316514513,"results":"57","hashOfConfig":"31"},{"size":1143,"mtime":1615792859340,"results":"58","hashOfConfig":"31"},{"size":385,"mtime":1615822179645,"results":"59","hashOfConfig":"31"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},"13pmjrl",{"filePath":"63","messages":"64","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"62"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"62"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"62"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"62"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"62"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"62"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"62"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"62"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"62"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"62"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"62"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"116","messages":"117","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"62"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"62"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"62"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"62"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},"C:\\Users\\Zabilsya\\Desktop\\Cursovaya\\Calendar\\client\\src\\index.js",[],["134","135"],"C:\\Users\\Zabilsya\\Desktop\\Cursovaya\\Calendar\\client\\src\\App.js",["136","137"],"import React, { useEffect, useState } from 'react'\r\nimport { useRoutes } from './routes'\r\nimport { BrowserRouter } from 'react-router-dom'\r\nimport { Navigation } from './Components/Navigation/Navigation'\r\nimport { useAuth } from './hooks/auth.hook'\r\nimport { AuthContext } from './context/AuthContext'\r\nimport { ScheduleContext } from './context/ScheduleContext'\r\nimport { useSchedule } from './hooks/schedule.hook'\r\n\r\nimport './style.css'\r\n\r\nfunction App() {\r\n  const { socket, token, login, logout, userId } = useAuth()\r\n  const isAuthenticated = !!token\r\n\r\n  const events = useSchedule(socket)\r\n  const routes = useRoutes(isAuthenticated, userId)\r\n\r\n  return (\r\n    <AuthContext.Provider value={{\r\n      token, login, logout, userId, isAuthenticated\r\n    }}>\r\n      <ScheduleContext.Provider value={{socket, events}}>\r\n        <BrowserRouter>\r\n          {isAuthenticated && <Navigation userId={userId} />}\r\n          <div className=\"container\">\r\n            {routes}\r\n          </div>\r\n        </BrowserRouter>\r\n      </ScheduleContext.Provider>\r\n    </AuthContext.Provider>\r\n  )\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\Zabilsya\\Desktop\\Cursovaya\\Calendar\\client\\src\\reportWebVitals.js",[],"C:\\Users\\Zabilsya\\Desktop\\Cursovaya\\Calendar\\client\\src\\routes.js",[],"C:\\Users\\Zabilsya\\Desktop\\Cursovaya\\Calendar\\client\\src\\hooks\\auth.hook.js",["138"],"import {useState, useCallback, useEffect} from 'react'\r\nimport io from 'socket.io-client'\r\n\r\nconst storageName = 'userData'\r\n\r\nexport const useAuth = () => {\r\n  const [token, setToken] = useState(null)\r\n  const [userId, setUserId] = useState(null)\r\n  const [socket, setSocket] = useState(null)\r\n\r\n  const login = useCallback((jwtToken, id) => {\r\n    setToken(jwtToken)\r\n    setUserId(id)\r\n    setSocket(io())\r\n\r\n    localStorage.setItem(storageName, JSON.stringify({\r\n      userId: id, token: jwtToken\r\n    }))\r\n  }, [])\r\n\r\n\r\n  const logout = useCallback(() => {\r\n    setToken(null)\r\n    setUserId(null)\r\n    localStorage.removeItem(storageName)\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    const data = JSON.parse(localStorage.getItem(storageName))\r\n\r\n    if (data && data.token) {\r\n      login(data.token, data.userId)\r\n    }\r\n  }, [login])\r\n\r\n  useEffect(() => {\r\n    if (socket) {\r\n      socket.emit('enter', userId)\r\n    }\r\n  }, [socket])\r\n\r\n  return {socket, login, logout, token, userId}\r\n}","C:\\Users\\Zabilsya\\Desktop\\Cursovaya\\Calendar\\client\\src\\hooks\\schedule.hook.js",["139","140"],"import React, { useEffect, useState } from \"react\"\r\nimport { useRequest } from \"./request.hook\"\r\nimport moment from \"moment\";\r\n\r\nexport const useSchedule = socket => {\r\n  const [events, setEvents] = useState([])\r\n  const request = useRequest(socket)\r\n\r\n  useEffect(() => {\r\n    if (socket) {\r\n      getEvents()\r\n      socket.on('newEvent', message => {\r\n        message.startDatetime = moment(message.startDatetime)\r\n        setEvents(events => ([...events, message]))\r\n      })\r\n  \r\n      socket.on('deletedEvent', message => {\r\n        setEvents(events => {\r\n          const newArr = [...events.filter(item => item._id !== message)]\r\n          return newArr\r\n        })\r\n      })\r\n  \r\n      socket.on('updatedEvent', message => {\r\n        setEvents(events => {\r\n          const index = events.findIndex(item => item._id === message._id)\r\n          const before = events.slice(0, index);\r\n          const after = events.slice(index + 1);\r\n          const newList = [...before, message, ...after];\r\n          return newList\r\n        })\r\n      })\r\n    }\r\n    \r\n  }, [socket])\r\n\r\n  async function getEvents() {\r\n      let events = false\r\n      events = await request('getEvents')\r\n      events.forEach((item) => {\r\n        item.startDatetime = moment(item.startDatetime)\r\n      })\r\n      \r\n      setEvents(events)\r\n  }\r\n\r\n  return events\r\n}","C:\\Users\\Zabilsya\\Desktop\\Cursovaya\\Calendar\\client\\src\\context\\AuthContext.js",[],"C:\\Users\\Zabilsya\\Desktop\\Cursovaya\\Calendar\\client\\src\\context\\ScheduleContext.js",[],"C:\\Users\\Zabilsya\\Desktop\\Cursovaya\\Calendar\\client\\src\\Components\\Navigation\\Navigation.js",[],"C:\\Users\\Zabilsya\\Desktop\\Cursovaya\\Calendar\\client\\src\\hooks\\request.hook.js",["141"],"import { useCallback, useContext } from 'react'\r\nimport { ScheduleContext } from '../context/ScheduleContext'\r\n\r\nexport const useRequest = (transmittedSocket = null) => {\r\n    let {socket} = useContext(ScheduleContext)\r\n    if (!socket) socket = transmittedSocket\r\n\r\n    const request = async (type, info = null) => {\r\n        let answer\r\n        socket.emit(type, info)\r\n        await new Promise(resolve => {\r\n            socket.on(type, response => {\r\n                resolve(response)\r\n            })\r\n        })\r\n        .then(response => {\r\n            socket.removeAllListeners(type)\r\n            if (typeof response !== 'string') {\r\n                answer = response\r\n                return\r\n            } \r\n            console.log(response)\r\n        })\r\n        return answer\r\n    }\r\n\r\n    return request\r\n}","C:\\Users\\Zabilsya\\Desktop\\Cursovaya\\Calendar\\client\\src\\pages\\PersonalInfoPage\\PersonalInfoPage.js",[],"C:\\Users\\Zabilsya\\Desktop\\Cursovaya\\Calendar\\client\\src\\pages\\SupportPage\\SupportPage.js",[],"C:\\Users\\Zabilsya\\Desktop\\Cursovaya\\Calendar\\client\\src\\pages\\CalendarPage\\CalendarPage.js",["142"],"import React, { useState, useContext } from 'react'\r\nimport {CalendarHeader} from './CalendarHeader/CalendarHeader'\r\nimport {CalendarGrid} from './CalendarGrid/CalendarGrid'\r\nimport moment from 'moment'\r\n\r\nimport './css/style.css'\r\n\r\nexport const CalendarPage = () => {\r\n    moment.updateLocale('en', {week: {dow: 1}})\r\n    const [today, setToday] = useState(moment())\r\n    const startDay = today.clone().startOf('month').startOf('week')\r\n\r\n    const onPrevMonth = () => {\r\n        setToday(prev => prev.clone().subtract(1, 'month'))\r\n    }\r\n\r\n    const onNextMonth = () => {\r\n        setToday(prev => prev.clone().add(1, 'month'))\r\n    } \r\n\r\n    return (\r\n        <div className=\"calendar\">\r\n            <CalendarHeader today={today} onPrevMonth={onPrevMonth} onNextMonth={onNextMonth}/>\r\n            <CalendarGrid startDay={startDay} today={today}/>\r\n        </div>\r\n    )\r\n}","C:\\Users\\Zabilsya\\Desktop\\Cursovaya\\Calendar\\client\\src\\pages\\AuthPage\\AuthPage.js",["143","144","145"],"import axios from 'axios';\r\nimport React, {useState, useContext} from 'react'\r\nimport { useRequest } from '../../hooks/request.hook';\r\nimport {AuthContext} from './../../context/AuthContext'\r\nimport URLs from './../../URLs';\r\n\r\nimport './css/style.css'\r\n\r\nexport const AuthPage = () => {\r\n    const auth = useContext(AuthContext)\r\n    const [form, setForm] = useState({\r\n        email: '', password: ''\r\n    });\r\n\r\n    const changeInputHandler = event => {\r\n        setForm({ ...form, [event.target.name]: event.target.value })\r\n    }\r\n\r\n    const loginHandler = async () => {\r\n        let response = await fetch('/api/auth/login', {\r\n            method: 'POST',\r\n            headers: {\r\n              'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(form)\r\n          })\r\n        const result = await response.json()\r\n        if(!response.ok) {\r\n            console.log(result.message)\r\n            return\r\n        }\r\n        auth.login(result.token, result.userId)\r\n    }\r\n\r\n    return (\r\n        <div className=\"auth\">\r\n            <div className=\"authorization\">\r\n                <h2 className='authorization-title'>Авторизация</h2>\r\n                <div className=\"authorization-content\">\r\n                    <div className=\"form-floating mb-3\">\r\n                        <input type=\"email\" className=\"form-control\" name=\"email\" value={form.email} onChange={changeInputHandler} id=\"floatingInput\" placeholder=\"name@example.com\" />\r\n                        <label htmlFor=\"floatingInput\">Email</label>\r\n                    </div>\r\n                    <div className=\"form-floating form-floating-last\">\r\n                        <input type=\"password\" className=\"form-control\" name=\"password\" value={form.password} onChange={changeInputHandler} id=\"floatingPassword\" placeholder=\"Password\" />\r\n                        <label htmlFor=\"floatingPassword\">Пароль</label>\r\n                    </div>\r\n                    <button type=\"button\" className=\"btn-sign\" onClick={loginHandler}>Войти</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","C:\\Users\\Zabilsya\\Desktop\\Cursovaya\\Calendar\\client\\src\\pages\\PostgraduatesInfoPage\\PostgraduatesInfoPage.js",["146","147"],"import React, { useState, useEffect, useContext } from 'react'\r\nimport { PostgraduatesTable } from './PostgraduatesTable/PostgraduatesTable'\r\nimport { ModalStudent } from '../../Components/ModalStudent/ModalStudent'\r\n\r\nimport './css/style.css'\r\nimport { useStudents } from '../../hooks/students.hook'\r\n\r\nexport const PostgraduatesInfoPage = () => {\r\n    const { students, chosenStudent, setChosenStudent } = useStudents()\r\n    const [isOpenModal, setIsOpenModal] = useState(false)\r\n    const [modalInfo, setModalInfo] = useState({\r\n        data: '', title: '', buttonText: ''\r\n    })\r\n\r\n    const chooseStudent = student => {\r\n        setChosenStudent(student)\r\n    }\r\n\r\n    const addStudent = () => {\r\n        setModalInfo({\r\n            data: false, title: 'Добавление аспиранта', buttonText: 'Добавить'\r\n        })\r\n        setIsOpenModal(true)\r\n    }\r\n\r\n    const editStudent = () => {\r\n        setModalInfo({\r\n            data: chosenStudent, title: 'Редактирование информации об аспиранте', buttonText: 'Сохранить'\r\n        })\r\n        setIsOpenModal(true)\r\n    }\r\n\r\n    const deleteStudent = () => {\r\n        setModalInfo({\r\n            data: chosenStudent, title: 'Удаление аспиранта', buttonText: 'Удалить'\r\n        })\r\n        setIsOpenModal(true)\r\n    }\r\n\r\n    const closeModal = () => {\r\n        setIsOpenModal(false)\r\n    }\r\n\r\n    return (\r\n        <div className=\"info\">\r\n            <div className=\"content-elements\">\r\n                <PostgraduatesTable students={students} chooseStudent={chooseStudent} chosenStudent={chosenStudent}/>\r\n            </div>\r\n            <div>\r\n                <button type=\"button\" id=\"\" onClick={editStudent}>Редактировать информацию об аспиранте</button>\r\n                <button type=\"button\" onClick={addStudent}>Добавить аспиранта</button>\r\n                <button type=\"button\"onClick={deleteStudent}>Удалить аспиранта</button>\r\n            </div>\r\n            {isOpenModal && \r\n                <ModalStudent modalInfo={modalInfo} onClose={closeModal}/>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n","C:\\Users\\Zabilsya\\Desktop\\Cursovaya\\Calendar\\client\\src\\URLs.js",[],"C:\\Users\\Zabilsya\\Desktop\\Cursovaya\\Calendar\\client\\src\\hooks\\students.hook.js",["148","149"],"import React, { useEffect, useState, useContext } from \"react\"\r\nimport { ScheduleContext } from './../context/ScheduleContext'\r\nimport { useRequest } from \"./request.hook\"\r\n\r\nexport const useStudents = () => {\r\n  const [students, setStudents] = useState([])\r\n  const [chosenStudent, setChosenStudent] = useState(false)\r\n  const request = useRequest()\r\n  const {socket} = useContext(ScheduleContext)\r\n\r\n  useEffect(() => {\r\n    getStudents()\r\n    socket.on('newUser', message => {\r\n      setStudents(students => ([...students, message]))\r\n      setChosenStudent(message)\r\n    })\r\n\r\n    socket.on('deletedUser', message => {\r\n      setStudents(students => {\r\n        const newArr = [...students.filter(item => item._id !== message)]\r\n        setChosenStudent(newArr[0])\r\n        return newArr\r\n      })\r\n    })\r\n\r\n    socket.on('updatedUser', message => {\r\n      setStudents(students => {\r\n        const index = students.findIndex(item => item._id === message._id)\r\n        const before = students.slice(0, index);\r\n        const after = students.slice(index + 1);\r\n        const newList = [...before, message, ...after];\r\n        return newList\r\n      })\r\n    })\r\n    \r\n  }, [socket])\r\n\r\n  async function getStudents() {\r\n      let users = false\r\n      users = await request('getUsers')\r\n      setStudents(users)\r\n      setChosenStudent(users[0])\r\n  }\r\n\r\n  return { students, chosenStudent, setChosenStudent }\r\n}","C:\\Users\\Zabilsya\\Desktop\\Cursovaya\\Calendar\\client\\src\\pages\\CalendarPage\\CalendarHeader\\CalendarHeader.js",[],"C:\\Users\\Zabilsya\\Desktop\\Cursovaya\\Calendar\\client\\src\\pages\\PostgraduatesInfoPage\\PostgraduatesTable\\PostgraduatesTable.js",["150","151","152"],"import React, { useEffect, useState } from 'react';\r\nimport { useRequest } from './../../../hooks/request.hook'\r\nimport {PostgraduatesTableElement} from './PostgraduatesTableElement/PostgraduatesTableElement'\r\n\r\nimport './css/style.css'\r\n\r\nexport const PostgraduatesTable = ({students, chooseStudent, chosenStudent}) => {\r\n    \r\n    return (\r\n        <>\r\n            {students &&\r\n                <div className=\"main-table\">\r\n                    <h2 className=\"main-table-title\">Список аспирантов</h2>\r\n                    <table className=\"table table-bordered\">\r\n                        <thead className=\"thead-dark\">\r\n                            <tr className=\"main-table-header\">\r\n                                <th className=\"main-table-header-item\">id</th>\r\n                                <th className=\"main-table-header-item\">Фамилия</th>\r\n                                <th className=\"main-table-header-item\">Имя</th>\r\n                                <th className=\"main-table-header-item\">Отчество</th>\r\n                                <th className=\"main-table-header-item\">Электронная почта</th>\r\n                                <th className=\"main-table-header-item\">Год поступления</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {\r\n                                students.map(student => (\r\n                                    <PostgraduatesTableElement key={student._id} student={student} chosenStudent={chosenStudent} onChooseStudent={() => chooseStudent(student)} />\r\n                                ))\r\n                            }\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            }\r\n            {students === '' && <h1 className=\"error-title\">Не найдено ни одного аспиранта!</h1>}\r\n        </>\r\n    )\r\n}","C:\\Users\\Zabilsya\\Desktop\\Cursovaya\\Calendar\\client\\src\\pages\\CalendarPage\\CalendarGrid\\CalendarGrid.js",["153"],"import React, { useState, useContext } from 'react';\r\nimport moment from 'moment'\r\nimport {CalendarDay} from './../CalendarDay/CalendarDay'\r\nimport {ScheduleContext} from '../../../context/ScheduleContext'\r\n\r\nimport './css/style.css'\r\n\r\nexport const CalendarGrid = ({ startDay, today }) => {\r\n    const {events} = useContext(ScheduleContext)\r\n    const filteredEvents = events.filter(event => event.startDatetime.isSame(today, 'month'))\r\n    const totalDays = 42\r\n    const day = startDay.clone().subtract(1, 'day')\r\n    const daysArr = [...Array(totalDays)].map(() => day.add(1, 'day').clone())\r\n    const isCurrentDay = day => moment().isSame(day, 'day')\r\n    const isSelectedMonth = day => today.isSame(day, 'month')\r\n\r\n    return (\r\n        <>\r\n            <div className=\"calendar-grid-header\">\r\n                {[...Array(7)].map((item, index) => (\r\n                    <div className=\"day-of-week\" key={index}>\r\n                        {moment().day(index + 1).format('ddd')}\r\n                    </div>\r\n                ))}\r\n            </div>\r\n            <div className=\"calendar-grid\">\r\n                {\r\n                    daysArr.map((day, index) => {\r\n                        const dayEvents = filteredEvents.filter(event => event.startDatetime.isSame(day, 'day'))\r\n                        return <CalendarDay day={day} dayEvents={dayEvents} isCurrentDay={isCurrentDay} isSelectedMonth={isSelectedMonth} key={index}/>\r\n                    })\r\n                }\r\n            </div>\r\n        </>\r\n    )\r\n}","C:\\Users\\Zabilsya\\Desktop\\Cursovaya\\Calendar\\client\\src\\Components\\ModalStudent\\ModalStudent.js",["154","155"],"import React, { useEffect, useState } from 'react'\r\nimport ReactDOM from 'react-dom';\r\nimport { useRequest } from '../../hooks/request.hook';\r\nimport { Student } from '../Student/Student'\r\n\r\nimport './css/style.css'\r\n\r\nexport const ModalStudent = ({ modalInfo, onClose }) => {\r\n    const { data, title, buttonText } = modalInfo\r\n    const request = useRequest()\r\n\r\n    const onConfirmChanges = async form => {\r\n        switch (buttonText) {\r\n            case 'Добавить':\r\n                await request('addUser', form)\r\n                break\r\n            case 'Сохранить':\r\n                await request('updateUser', form)\r\n                break\r\n            case 'Удалить':\r\n                await request('deleteUser', form)\r\n                break\r\n            default: break\r\n        }\r\n           onClose()\r\n    }\r\n\r\n    return (\r\n        ReactDOM.createPortal(\r\n            <div className=\"overlay\" onClick={onClose}>\r\n                <div className=\"modal\" onClick={e => e.stopPropagation()}>\r\n                    <div className=\"modal-header\">\r\n                        <h2 className=\"modal-title\">{title}</h2>\r\n                        <div className=\"modal-close\" onClick={onClose}></div>\r\n                    </div>\r\n                        <Student data={data} buttonText={buttonText} onConfirm={onConfirmChanges} />\r\n                </div>\r\n            </div>,\r\n            document.getElementById('modal')\r\n        )\r\n    )\r\n}","C:\\Users\\Zabilsya\\Desktop\\Cursovaya\\Calendar\\client\\src\\pages\\CalendarPage\\CalendarDay\\CalendarDay.js",["156","157"],"C:\\Users\\Zabilsya\\Desktop\\Cursovaya\\Calendar\\client\\src\\pages\\PostgraduatesInfoPage\\PostgraduatesTable\\PostgraduatesTableElement\\PostgraduatesTableElement.js",["158","159"],"import React, { useEffect, useState } from 'react';\r\n\r\nimport './css/style.css'\r\n\r\nexport const PostgraduatesTableElement = ({student, onChooseStudent, chosenStudent}) => {\r\n    const {_id, name, secondName, thirdName, email, admissionYear} = student\r\n\r\n    return (\r\n        <tr className={chosenStudent ? chosenStudent._id === _id ? \"student-info chosen-student\" : \"student-info\" : \"student-info\" } onClick={onChooseStudent}>\r\n            <th className=\"student-info-element\">{_id}</th>\r\n            <th className=\"student-info-element\">{name}</th>\r\n            <th className=\"student-info-element\">{secondName}</th>\r\n            <th className=\"student-info-element\">{thirdName}</th>\r\n            <th className=\"student-info-element\">{email}</th>\r\n            <th className=\"student-info-element\">{admissionYear}</th>\r\n        </tr>\r\n    )\r\n}","C:\\Users\\Zabilsya\\Desktop\\Cursovaya\\Calendar\\client\\src\\Components\\Student\\Student.js",[],"C:\\Users\\Zabilsya\\Desktop\\Cursovaya\\Calendar\\client\\src\\Components\\ModalEvents\\ModalEvents.js",["160","161"],"import React, { useEffect, useState } from 'react'\r\nimport ReactDOM from 'react-dom';\r\nimport moment from \"moment\";\r\nimport { useRequest } from '../../hooks/request.hook';\r\nimport { Event } from '../Event/Event'\r\n\r\n// import './css/style.css'\r\n\r\nexport const ModalEvents = ({ title, dayEvents, onClose }) => {\r\n    const [isAdding, setIsAdding] = useState(false)\r\n    const request = useRequest()\r\n\r\n    const changeModalMode = () => {\r\n        setIsAdding(isAdding => !isAdding)\r\n    }\r\n\r\n\r\n    const onConfirmChanges = async (type, form) => {\r\n        await request(type, form)\r\n    }\r\n\r\n    return (\r\n        ReactDOM.createPortal(\r\n            <div className=\"overlay\" onClick={onClose}>\r\n                <div className=\"modal\" onClick={e => e.stopPropagation()}>\r\n                    <div className=\"modal-header\">\r\n                        <h2 className=\"modal-title\">{title}</h2>\r\n                        <div className=\"modal-close\" onClick={onClose}></div>\r\n                    </div>\r\n                    {dayEvents.length !== 0 &&\r\n                        dayEvents.map(data => (\r\n                            <Event data={data} reveal={false} changeModalMode={changeModalMode} onConfirmChanges={onConfirmChanges} key={data._id}/>\r\n                        ))\r\n                    }\r\n                    {isAdding && <Event data={''} reveal={true} changeModalMode={changeModalMode} onConfirmChanges={onConfirmChanges} />}\r\n                    {(!isAdding && dayEvents.length === 0) &&\r\n\r\n                        <div className=\"modal-body\">\r\n                            <h2 className=\"event-title\">Мероприятий в данный день не запланировано</h2>\r\n                        </div>\r\n\r\n                    }\r\n                    {!isAdding &&\r\n                        <div className=\"modal-footer\">\r\n                            <button className=\"modal-footer-button\" onClick={changeModalMode}>Добавить мероприятие</button>\r\n                        </div>\r\n                    }\r\n                </div>\r\n            </div>,\r\n            document.getElementById('modal')\r\n        )\r\n    )\r\n}","C:\\Users\\Zabilsya\\Desktop\\Cursovaya\\Calendar\\client\\src\\Components\\Event\\Event.js",["162","163","164","165"],"import React, { useEffect, useState } from 'react'\r\nimport moment from \"moment\";\r\nimport MomentUtils from \"@date-io/moment\";\r\nimport 'date-fns'\r\nimport DateFnsUtils from '@date-io/date-fns'\r\nimport {\r\n    MuiPickersUtilsProvider,\r\n    DatePicker,\r\n    TimePicker\r\n} from '@material-ui/pickers'\r\nimport { Dropdown } from './../Dropdown/Dropdown'\r\n\r\nimport './css/style.css'\r\n\r\nexport const Event = ({ data, reveal, changeModalMode, onConfirmChanges }) => {\r\n    const [form, setForm] = useState({\r\n        _id: '', name: '', description: '', startDatetime: new Date(), priority: '', type: '', notificationFrequency: '', info: ''\r\n    })\r\n    const [eventVisibility, setEventVisibility] = useState(reveal) // тест при обновлении с другого компа мероприятия (ставим false если плохо)\r\n    const [editingMode, setEditingMode] = useState(reveal) // тест при обновлении с другого компа мероприятия (ставим false если плохо)\r\n\r\n    const turnOnEventVisibility = () => {\r\n        setEventVisibility(true)\r\n    }\r\n\r\n    const turnOnEditingMode = () => {\r\n        setEditingMode(true)\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (data) {\r\n            setForm({\r\n                _id: data._id,\r\n                name: data.name,\r\n                description: data.description,\r\n                startDatetime: data.startDatetime,\r\n                priority: data.priority,\r\n                type: data.type,\r\n                notificationFrequency: data.notificationFrequency,\r\n                info: data.info\r\n            })\r\n        }\r\n        if (reveal) {\r\n            turnOnEventVisibility()\r\n            turnOnEditingMode()\r\n        }\r\n    }, [data])\r\n\r\n    const changeInputHandler = event => {\r\n        setForm({ ...form, [event.target.name]: event.target.value })\r\n    }\r\n\r\n    const changeStartDateHandler = date => {\r\n        setForm({ ...form, startDatetime: date })\r\n    }\r\n\r\n    const cancelAdding = () => {\r\n        if (reveal) changeModalMode()\r\n        else {\r\n            setEditingMode(false)\r\n            setForm({\r\n                _id: data._id,\r\n                name: data.name,\r\n                description: data.description,\r\n                startDatetime: data.startDatetime,\r\n                priority: data.priority,\r\n                type: data.type,\r\n                notificationFrequency: data.notificationFrequency,\r\n                info: data.info\r\n            })\r\n        }\r\n    }\r\n\r\n    const saveChanges = () => {\r\n        if (reveal) {\r\n            onConfirmChanges('addEvent', form)\r\n            changeModalMode()\r\n        }\r\n        else onConfirmChanges('updateEvent', form)\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            {eventVisibility &&\r\n                <>\r\n                    <div className=\"modal-body\">\r\n                        <div className=\"form-floating mb-3\">\r\n                            <input type=\"text\" id=\"name\" className=\"form-control\" name=\"name\" value={form.name} onChange={changeInputHandler} readOnly={!editingMode} />\r\n                            <label htmlFor=\"name\">Название события</label>\r\n                        </div>\r\n                        {/* <div className=\"data\">\r\n               <Dropdown options={'k'}/>\r\n            </div> */}\r\n                        <div className=\"form-floating mb-3\">\r\n                            <textarea type=\"text\" id=\"description\" className=\"form-control\" name=\"description\" readOnly={!editingMode}>{form.description}</textarea>\r\n                            <label htmlFor=\"description\">Описание</label>\r\n                        </div>\r\n                        <div className=\"data\">\r\n                            <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                                <DatePicker\r\n                                    readOnly={!editingMode}\r\n                                    variant=\"inline\"\r\n                                    ampm={false}\r\n                                    label=\"Дата\"\r\n                                    value={form.startDatetime}\r\n                                    onChange={changeStartDateHandler}\r\n                                    disablePast\r\n                                    format=\"dd/MM/yyyy\"\r\n                                />\r\n                                <TimePicker\r\n                                    readOnly={!editingMode}\r\n                                    ampm={false}\r\n                                    label=\"время\"\r\n                                    value={form.startDatetime}\r\n                                    onChange={changeStartDateHandler}\r\n                                />\r\n                            </MuiPickersUtilsProvider>\r\n                        </div>\r\n                    </div>\r\n                </>\r\n            }\r\n\r\n            {(eventVisibility && editingMode) &&\r\n                <div className=\"modal-footer\">\r\n                    <button className=\"modal-footer-button\" onClick={saveChanges}>Сохранить</button>\r\n                    <button className=\"modal-footer-button\" onClick={cancelAdding}>Отменить</button>\r\n                </div>\r\n            }\r\n            {(eventVisibility && !editingMode) &&\r\n                <div className=\"modal-footer\">\r\n                    <button className=\"modal-footer-button\" onClick={turnOnEditingMode}>Редактировать</button>\r\n                    <button className=\"modal-footer-button\">Удалить</button>\r\n                </div>\r\n            }\r\n            {!eventVisibility &&\r\n                <div className=\"event-line\" onClick={turnOnEventVisibility}>{data.name}</div>\r\n            }\r\n\r\n        </>\r\n    )\r\n}","C:\\Users\\Zabilsya\\Desktop\\Cursovaya\\Calendar\\client\\src\\Components\\Dropdown\\Dropdown.js",["166","167"],"import React, { useEffect, useState } from 'react'\r\n\r\nimport './css/style.css'\r\n\r\nexport const Dropdown = ({options}) => {\r\n\r\n    return (\r\n        <div className=\"dropdown\">\r\n            <div className=\"control\">\r\n            <div className=\"selected-value\">kek</div>\r\n            <div className=\"arrow\"/>\r\n            </div>\r\n            <div className=\"options\">\r\n                {\r\n                    options.map(option => \r\n                        <div className=\"option\">{option.name}</div>\r\n                    )\r\n                }\r\n            </div>\r\n           \r\n        </div>\r\n    )\r\n}","C:\\Users\\Zabilsya\\Desktop\\Cursovaya\\Calendar\\client\\src\\scripts\\script.js",[],"C:\\Users\\Zabilsya\\Desktop\\Cursovaya\\Calendar\\client\\src\\data\\eventTypes.js",[],{"ruleId":"168","replacedBy":"169"},{"ruleId":"170","replacedBy":"171"},{"ruleId":"172","severity":1,"message":"173","line":1,"column":17,"nodeType":"174","messageId":"175","endLine":1,"endColumn":26},{"ruleId":"172","severity":1,"message":"176","line":1,"column":28,"nodeType":"174","messageId":"175","endLine":1,"endColumn":36},{"ruleId":"177","severity":1,"message":"178","line":40,"column":6,"nodeType":"179","endLine":40,"endColumn":14,"suggestions":"180"},{"ruleId":"172","severity":1,"message":"181","line":1,"column":8,"nodeType":"174","messageId":"175","endLine":1,"endColumn":13},{"ruleId":"177","severity":1,"message":"182","line":35,"column":6,"nodeType":"179","endLine":35,"endColumn":14,"suggestions":"183"},{"ruleId":"172","severity":1,"message":"184","line":1,"column":10,"nodeType":"174","messageId":"175","endLine":1,"endColumn":21},{"ruleId":"172","severity":1,"message":"185","line":1,"column":27,"nodeType":"174","messageId":"175","endLine":1,"endColumn":37},{"ruleId":"172","severity":1,"message":"186","line":1,"column":8,"nodeType":"174","messageId":"175","endLine":1,"endColumn":13},{"ruleId":"172","severity":1,"message":"187","line":3,"column":10,"nodeType":"174","messageId":"175","endLine":3,"endColumn":20},{"ruleId":"172","severity":1,"message":"188","line":5,"column":8,"nodeType":"174","messageId":"175","endLine":5,"endColumn":12},{"ruleId":"172","severity":1,"message":"173","line":1,"column":27,"nodeType":"174","messageId":"175","endLine":1,"endColumn":36},{"ruleId":"172","severity":1,"message":"185","line":1,"column":38,"nodeType":"174","messageId":"175","endLine":1,"endColumn":48},{"ruleId":"172","severity":1,"message":"181","line":1,"column":8,"nodeType":"174","messageId":"175","endLine":1,"endColumn":13},{"ruleId":"177","severity":1,"message":"189","line":36,"column":6,"nodeType":"179","endLine":36,"endColumn":14,"suggestions":"190"},{"ruleId":"172","severity":1,"message":"173","line":1,"column":17,"nodeType":"174","messageId":"175","endLine":1,"endColumn":26},{"ruleId":"172","severity":1,"message":"176","line":1,"column":28,"nodeType":"174","messageId":"175","endLine":1,"endColumn":36},{"ruleId":"172","severity":1,"message":"187","line":2,"column":10,"nodeType":"174","messageId":"175","endLine":2,"endColumn":20},{"ruleId":"172","severity":1,"message":"176","line":1,"column":17,"nodeType":"174","messageId":"175","endLine":1,"endColumn":25},{"ruleId":"172","severity":1,"message":"173","line":1,"column":17,"nodeType":"174","messageId":"175","endLine":1,"endColumn":26},{"ruleId":"172","severity":1,"message":"176","line":1,"column":28,"nodeType":"174","messageId":"175","endLine":1,"endColumn":36},{"ruleId":"172","severity":1,"message":"191","line":2,"column":8,"nodeType":"174","messageId":"175","endLine":2,"endColumn":14},{"ruleId":"192","severity":1,"message":"193","line":34,"column":31,"nodeType":"194","messageId":"195","endLine":34,"endColumn":37},{"ruleId":"172","severity":1,"message":"173","line":1,"column":17,"nodeType":"174","messageId":"175","endLine":1,"endColumn":26},{"ruleId":"172","severity":1,"message":"176","line":1,"column":28,"nodeType":"174","messageId":"175","endLine":1,"endColumn":36},{"ruleId":"172","severity":1,"message":"173","line":1,"column":17,"nodeType":"174","messageId":"175","endLine":1,"endColumn":26},{"ruleId":"172","severity":1,"message":"191","line":3,"column":8,"nodeType":"174","messageId":"175","endLine":3,"endColumn":14},{"ruleId":"172","severity":1,"message":"191","line":2,"column":8,"nodeType":"174","messageId":"175","endLine":2,"endColumn":14},{"ruleId":"172","severity":1,"message":"196","line":3,"column":8,"nodeType":"174","messageId":"175","endLine":3,"endColumn":19},{"ruleId":"172","severity":1,"message":"197","line":11,"column":10,"nodeType":"174","messageId":"175","endLine":11,"endColumn":18},{"ruleId":"177","severity":1,"message":"198","line":47,"column":8,"nodeType":"179","endLine":47,"endColumn":14,"suggestions":"199"},{"ruleId":"172","severity":1,"message":"173","line":1,"column":17,"nodeType":"174","messageId":"175","endLine":1,"endColumn":26},{"ruleId":"172","severity":1,"message":"176","line":1,"column":28,"nodeType":"174","messageId":"175","endLine":1,"endColumn":36},"no-native-reassign",["200"],"no-negated-in-lhs",["201"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'userId'. Either include it or remove the dependency array.","ArrayExpression",["202"],"'React' is defined but never used.","React Hook useEffect has a missing dependency: 'getEvents'. Either include it or remove the dependency array.",["203"],"'useCallback' is defined but never used.","'useContext' is defined but never used.","'axios' is defined but never used.","'useRequest' is defined but never used.","'URLs' is defined but never used.","React Hook useEffect has a missing dependency: 'getStudents'. Either include it or remove the dependency array.",["204"],"'moment' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ReturnStatement","expectedReturnValue","'MomentUtils' is defined but never used.","'Dropdown' is defined but never used.","React Hook useEffect has a missing dependency: 'reveal'. Either include it or remove the dependency array.",["205"],"no-global-assign","no-unsafe-negation",{"desc":"206","fix":"207"},{"desc":"208","fix":"209"},{"desc":"210","fix":"211"},{"desc":"212","fix":"213"},"Update the dependencies array to be: [socket, userId]",{"range":"214","text":"215"},"Update the dependencies array to be: [getEvents, socket]",{"range":"216","text":"217"},"Update the dependencies array to be: [getStudents, socket]",{"range":"218","text":"219"},"Update the dependencies array to be: [data, reveal]",{"range":"220","text":"221"},[927,935],"[socket, userId]",[1065,1073],"[getEvents, socket]",[1174,1182],"[getStudents, socket]",[1633,1639],"[data, reveal]"]