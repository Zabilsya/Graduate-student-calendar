[{"C:\\Users\\Zabilsya\\Desktop\\Cursovaya\\Calendar\\client\\src\\index.js":"1","C:\\Users\\Zabilsya\\Desktop\\Cursovaya\\Calendar\\client\\src\\reportWebVitals.js":"2","C:\\Users\\Zabilsya\\Desktop\\Cursovaya\\Calendar\\client\\src\\App.js":"3","C:\\Users\\Zabilsya\\Desktop\\Cursovaya\\Calendar\\client\\src\\routes.js":"4","C:\\Users\\Zabilsya\\Desktop\\Cursovaya\\Calendar\\client\\src\\hooks\\auth.hook.js":"5","C:\\Users\\Zabilsya\\Desktop\\Cursovaya\\Calendar\\client\\src\\context\\ScheduleContext.js":"6","C:\\Users\\Zabilsya\\Desktop\\Cursovaya\\Calendar\\client\\src\\hooks\\schedule.hook.js":"7","C:\\Users\\Zabilsya\\Desktop\\Cursovaya\\Calendar\\client\\src\\context\\AuthContext.js":"8","C:\\Users\\Zabilsya\\Desktop\\Cursovaya\\Calendar\\client\\src\\hooks\\notification.hook.js":"9","C:\\Users\\Zabilsya\\Desktop\\Cursovaya\\Calendar\\client\\src\\Components\\Navigation\\Navigation.js":"10","C:\\Users\\Zabilsya\\Desktop\\Cursovaya\\Calendar\\client\\src\\Components\\NotificationMenu\\NotificationMenu.js":"11","C:\\Users\\Zabilsya\\Desktop\\Cursovaya\\Calendar\\client\\src\\hooks\\students.hook.js":"12","C:\\Users\\Zabilsya\\Desktop\\Cursovaya\\Calendar\\client\\src\\hooks\\request.hook.js":"13","C:\\Users\\Zabilsya\\Desktop\\Cursovaya\\Calendar\\client\\src\\pages\\PersonalInfoPage\\PersonalInfoPage.js":"14","C:\\Users\\Zabilsya\\Desktop\\Cursovaya\\Calendar\\client\\src\\pages\\CalendarPage\\CalendarPage.js":"15","C:\\Users\\Zabilsya\\Desktop\\Cursovaya\\Calendar\\client\\src\\pages\\AuthPage\\AuthPage.js":"16","C:\\Users\\Zabilsya\\Desktop\\Cursovaya\\Calendar\\client\\src\\pages\\SupportPage\\SupportPage.js":"17","C:\\Users\\Zabilsya\\Desktop\\Cursovaya\\Calendar\\client\\src\\pages\\PostgraduatesInfoPage\\PostgraduatesInfoPage.js":"18","C:\\Users\\Zabilsya\\Desktop\\Cursovaya\\Calendar\\client\\src\\URLs.js":"19","C:\\Users\\Zabilsya\\Desktop\\Cursovaya\\Calendar\\client\\src\\pages\\CalendarPage\\CalendarHeader\\CalendarHeader.js":"20","C:\\Users\\Zabilsya\\Desktop\\Cursovaya\\Calendar\\client\\src\\pages\\CalendarPage\\CalendarGrid\\CalendarGrid.js":"21","C:\\Users\\Zabilsya\\Desktop\\Cursovaya\\Calendar\\client\\src\\Components\\ModalStudent\\ModalStudent.js":"22","C:\\Users\\Zabilsya\\Desktop\\Cursovaya\\Calendar\\client\\src\\pages\\PostgraduatesInfoPage\\PostgraduatesTable\\PostgraduatesTable.js":"23","C:\\Users\\Zabilsya\\Desktop\\Cursovaya\\Calendar\\client\\src\\pages\\CalendarPage\\CalendarDay\\CalendarDay.js":"24","C:\\Users\\Zabilsya\\Desktop\\Cursovaya\\Calendar\\client\\src\\Components\\Student\\Student.js":"25","C:\\Users\\Zabilsya\\Desktop\\Cursovaya\\Calendar\\client\\src\\pages\\PostgraduatesInfoPage\\PostgraduatesTable\\PostgraduatesTableElement\\PostgraduatesTableElement.js":"26","C:\\Users\\Zabilsya\\Desktop\\Cursovaya\\Calendar\\client\\src\\data\\eventTypes.js":"27","C:\\Users\\Zabilsya\\Desktop\\Cursovaya\\Calendar\\client\\src\\Components\\ModalEvents\\ModalEvents.js":"28","C:\\Users\\Zabilsya\\Desktop\\Cursovaya\\Calendar\\client\\src\\Components\\Event\\Event.js":"29","C:\\Users\\Zabilsya\\Desktop\\Cursovaya\\Calendar\\client\\src\\context\\StudentContext.js":"30"},{"size":494,"mtime":1615310821448,"results":"31","hashOfConfig":"32"},{"size":375,"mtime":1615310821455,"results":"33","hashOfConfig":"32"},{"size":1783,"mtime":1616606979075,"results":"34","hashOfConfig":"32"},{"size":1396,"mtime":1616606791409,"results":"35","hashOfConfig":"32"},{"size":990,"mtime":1615567314276,"results":"36","hashOfConfig":"32"},{"size":123,"mtime":1615725195663,"results":"37","hashOfConfig":"32"},{"size":1356,"mtime":1616548687499,"results":"38","hashOfConfig":"32"},{"size":199,"mtime":1615310821446,"results":"39","hashOfConfig":"32"},{"size":2911,"mtime":1616689865598,"results":"40","hashOfConfig":"32"},{"size":1462,"mtime":1616665666657,"results":"41","hashOfConfig":"32"},{"size":2426,"mtime":1616689402814,"results":"42","hashOfConfig":"32"},{"size":1524,"mtime":1616611466877,"results":"43","hashOfConfig":"32"},{"size":856,"mtime":1616528044591,"results":"44","hashOfConfig":"32"},{"size":3250,"mtime":1616610687638,"results":"45","hashOfConfig":"32"},{"size":6612,"mtime":1616688540880,"results":"46","hashOfConfig":"32"},{"size":2178,"mtime":1616514520924,"results":"47","hashOfConfig":"32"},{"size":148,"mtime":1615310821455,"results":"48","hashOfConfig":"32"},{"size":2511,"mtime":1616611407103,"results":"49","hashOfConfig":"32"},{"size":260,"mtime":1615367661312,"results":"50","hashOfConfig":"32"},{"size":1695,"mtime":1615310821452,"results":"51","hashOfConfig":"32"},{"size":1494,"mtime":1616687212762,"results":"52","hashOfConfig":"32"},{"size":1461,"mtime":1615667776025,"results":"53","hashOfConfig":"32"},{"size":2132,"mtime":1616195174272,"results":"54","hashOfConfig":"32"},{"size":2069,"mtime":1616675510181,"results":"55","hashOfConfig":"32"},{"size":2745,"mtime":1615802535272,"results":"56","hashOfConfig":"32"},{"size":835,"mtime":1616195550788,"results":"57","hashOfConfig":"32"},{"size":457,"mtime":1616496817456,"results":"58","hashOfConfig":"32"},{"size":2351,"mtime":1616501325525,"results":"59","hashOfConfig":"32"},{"size":8575,"mtime":1616674546182,"results":"60","hashOfConfig":"32"},{"size":179,"mtime":1616606629091,"results":"61","hashOfConfig":"32"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},"13pmjrl",{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"64"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"64"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"64"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"64"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"64"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"64"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"64"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"64"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"64"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"64"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"64"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"64"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"64"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"64"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"64"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"137"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},"C:\\Users\\Zabilsya\\Desktop\\Cursovaya\\Calendar\\client\\src\\index.js",[],["140","141"],"C:\\Users\\Zabilsya\\Desktop\\Cursovaya\\Calendar\\client\\src\\reportWebVitals.js",[],"C:\\Users\\Zabilsya\\Desktop\\Cursovaya\\Calendar\\client\\src\\App.js",[],"C:\\Users\\Zabilsya\\Desktop\\Cursovaya\\Calendar\\client\\src\\routes.js",[],"C:\\Users\\Zabilsya\\Desktop\\Cursovaya\\Calendar\\client\\src\\hooks\\auth.hook.js",["142"],"import {useState, useCallback, useEffect} from 'react'\r\nimport io from 'socket.io-client'\r\n\r\nconst storageName = 'userData'\r\n\r\nexport const useAuth = () => {\r\n  const [token, setToken] = useState(null)\r\n  const [userId, setUserId] = useState(null)\r\n  const [socket, setSocket] = useState(null)\r\n\r\n  const login = useCallback((jwtToken, id) => {\r\n    setToken(jwtToken)\r\n    setUserId(id)\r\n    setSocket(io())\r\n\r\n    localStorage.setItem(storageName, JSON.stringify({\r\n      userId: id, token: jwtToken\r\n    }))\r\n  }, [])\r\n\r\n\r\n  const logout = useCallback(() => {\r\n    setToken(null)\r\n    setUserId(null)\r\n    localStorage.removeItem(storageName)\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    const data = JSON.parse(localStorage.getItem(storageName))\r\n\r\n    if (data && data.token) {\r\n      login(data.token, data.userId)\r\n    }\r\n  }, [login])\r\n\r\n  useEffect(() => {\r\n    if (socket) {\r\n      socket.emit('enter', userId)\r\n    }\r\n  }, [socket])\r\n\r\n  return {socket, login, logout, token, userId}\r\n}","C:\\Users\\Zabilsya\\Desktop\\Cursovaya\\Calendar\\client\\src\\context\\ScheduleContext.js",[],"C:\\Users\\Zabilsya\\Desktop\\Cursovaya\\Calendar\\client\\src\\hooks\\schedule.hook.js",["143"],"import { useEffect, useState } from \"react\"\r\nimport { useRequest } from \"./request.hook\"\r\nimport moment from \"moment\";\r\n\r\nexport const useSchedule = socket => {\r\n  const [events, setEvents] = useState([])\r\n  const request = useRequest(socket)\r\n\r\n  useEffect(() => {\r\n    if (socket) {\r\n      getEvents()\r\n      socket.on('newEvent', message => {\r\n        message.startDt = moment(message.startDt)\r\n        setEvents(events => ([...events, message]))\r\n      })\r\n  \r\n      socket.on('deletedEvent', message => {\r\n        setEvents(events => {\r\n          const newArr = [...events.filter(item => item._id !== message)]\r\n          return newArr\r\n        })\r\n      })\r\n  \r\n      socket.on('updatedEvent', message => {\r\n        message.startDt = moment(message.startDt)\r\n        setEvents(events => {\r\n          const index = events.findIndex(item => item._id === message._id)\r\n          const before = events.slice(0, index);\r\n          const after = events.slice(index + 1);\r\n          const newList = [...before, message, ...after];\r\n          return newList\r\n        })\r\n      })\r\n    }\r\n    \r\n  }, [socket])\r\n\r\n  async function getEvents() {\r\n      let events = false\r\n      events = await request('getEvents')\r\n      events.forEach(item => {\r\n        item.startDt = moment(item.startDt)\r\n      })\r\n      \r\n      setEvents(events)\r\n  }\r\n\r\n  return events\r\n}","C:\\Users\\Zabilsya\\Desktop\\Cursovaya\\Calendar\\client\\src\\context\\AuthContext.js",[],"C:\\Users\\Zabilsya\\Desktop\\Cursovaya\\Calendar\\client\\src\\hooks\\notification.hook.js",["144","145","146"],"import { useContext, useEffect, useState } from \"react\"\r\nimport { useRequest } from \"./request.hook\"\r\nimport moment from \"moment\";\r\nimport { ScheduleContext } from \"../context/ScheduleContext\";\r\nimport { toast } from 'react-toastify'\r\nimport 'react-toastify/dist/ReactToastify.css'\r\n\r\ntoast.configure()\r\n\r\nexport const useNotifications = (socket, userId) => {\r\n  const [notifications, setNotifications] = useState([])\r\n  const request = useRequest(socket)\r\n  console.log(notifications)\r\n  \r\n  const viewNotification = item => {\r\n    if (!item.viewers.includes(userId))\r\n    socket.emit('viewNotification', item)\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (socket) {\r\n        getNotifications()\r\n        socket.on('newNotification', message => {\r\n            message.createDt = moment(message.createDt)\r\n            message = createNotificationMessage(message)\r\n            setNotifications(notifications => ([message, ...notifications]))\r\n            toast(`${message.type}: ${message.eventName}`, {\r\n              position: toast.POSITION.TOP_LEFT\r\n          })\r\n        })\r\n        socket.on('viewNotification', message => {\r\n          message.createDt = moment(message.createDt)\r\n          message = createNotificationMessage(message)\r\n          setNotifications(notifications => {\r\n            const index = notifications.findIndex(item => item._id === message._id)\r\n            const before = notifications.slice(0, index);\r\n            const after = notifications.slice(index + 1);\r\n            const newList = [...before, message, ...after];\r\n            return newList\r\n          })\r\n        })\r\n      }\r\n    }, [socket])\r\n\r\n  async function getNotifications() {\r\n      let notifications = []\r\n      notifications = await request('getNotifications')\r\n      notifications.forEach(item => {\r\n        item.createDt = moment(item.createDt)\r\n        item = createNotificationMessage(item)\r\n        if (!item.viewers.includes(userId)) {\r\n          toast(`${item.type}: ${item.eventName}`, {\r\n            position: toast.POSITION.TOP_LEFT\r\n        })\r\n        }\r\n      })\r\n      setNotifications(notifications)\r\n  }\r\n\r\n  function createNotificationMessage(item) {\r\n      switch (item.type) {\r\n        case 'insert':\r\n          item.type = 'Добавлено новое событие'\r\n        break\r\n        case 'update':\r\n          item.type = 'Изменена информация о событии'\r\n          break\r\n        case 'delete':\r\n          item.type = 'Было удалено событие'\r\n          break\r\n        default:\r\n          item.type = 'Напоминание о событии'\r\n          if (item.daysLeft)\r\n            item.message = `Дней до начала события: ${item.daysLeft}`\r\n          else\r\n            item.message = `Остался 1 час до начала события!`\r\n      }\r\n      return item\r\n  }\r\n\r\n  return {notifications, viewNotification}\r\n}","C:\\Users\\Zabilsya\\Desktop\\Cursovaya\\Calendar\\client\\src\\Components\\Navigation\\Navigation.js",[],"C:\\Users\\Zabilsya\\Desktop\\Cursovaya\\Calendar\\client\\src\\Components\\NotificationMenu\\NotificationMenu.js",["147","148","149","150"],"import React, { useContext, useEffect, useState } from 'react'\r\nimport { useNotifications } from '../../hooks/notification.hook'\r\nimport { useRequest } from '../../hooks/request.hook'\r\n\r\nimport './css/style.css'\r\n\r\nexport const NotificationMenu = ({notifications, viewNotification, userId}) => {\r\n    const [showMenu, setShowMenu] = useState(false)\r\n    const toggleMenu = () => {\r\n        setShowMenu(showMenu => !showMenu)\r\n    }\r\n\r\n    let notViewedNotifications = 0\r\n\r\n    return (\r\n        <>\r\n        {showMenu && <div className=\"overlay\" onClick={toggleMenu}></div>}\r\n            <div className={showMenu ? \"notification-menu menu-open\" : \"notification-menu\"}>\r\n            {(notifications && notifications.length > 0) && \r\n                    notifications.sort((left, right) => right.createDt.diff(left.createDt)).map((item, index) => {\r\n                        const viewed = item.viewers.includes(userId)\r\n                        if (!viewed) notViewedNotifications++ \r\n                        return (\r\n                        <div className=\"notification\" onClick={() => viewNotification(item)} key={item._id}>\r\n                            <div className=\"notification-header\">\r\n                                <div className=\"notification-time\">{item.createDt.format('D MMMM YYYY, HH:mm')}</div>\r\n                            </div>\r\n                            <div className={viewed ? \"notification-body\" : \"notification-body not-viewed\"} title={!viewed ? 'Отметить как прочитанное' : ''}>\r\n                                <div className=\"notification-type\">{item.type}</div>\r\n                                <div className=\"notification-event\">{item.eventName}</div>\r\n                                {item.message &&\r\n                                    <div className=\"notification-message\">{item.type}</div>\r\n                                }\r\n                            </div>\r\n                        </div>\r\n                    )})\r\n                }\r\n                 \r\n            </div>\r\n\r\n            <span className={showMenu ? \"material-icons notification-icon icon-open\" : \"material-icons notification-icon\"} onClick={toggleMenu}>notifications</span>\r\n            {notViewedNotifications > 0 && \r\n            <span className={showMenu ? \"icon-missed icon-missed-open\" : \"icon-missed\"} onClick={toggleMenu}>{notViewedNotifications}</span>\r\n            }\r\n        </>\r\n    )\r\n}","C:\\Users\\Zabilsya\\Desktop\\Cursovaya\\Calendar\\client\\src\\hooks\\students.hook.js",["151","152","153","154","155"],"import React, { useEffect, useState, useContext } from \"react\"\r\nimport { ScheduleContext } from './../context/ScheduleContext'\r\nimport { useRequest } from \"./request.hook\"\r\n\r\nexport const useStudents = socket => {\r\n  const [students, setStudents] = useState([])\r\n  const [chosenStudent, setChosenStudent] = useState(false)\r\n  const request = useRequest(socket)\r\n\r\n  useEffect(() => {\r\n    if (socket) {\r\n      getStudents()\r\n      socket.on('newUser', message => {\r\n        setStudents(students => ([...students, message]))\r\n        setChosenStudent(message)\r\n      })\r\n\r\n      socket.on('deletedUser', message => {\r\n        setStudents(students => {\r\n          const newArr = [...students.filter(item => item._id !== message)]\r\n          setChosenStudent(newArr[0])\r\n          return newArr\r\n        })\r\n      })\r\n\r\n      socket.on('updatedUser', message => {\r\n        setStudents(students => {\r\n          const index = students.findIndex(item => item._id === message._id)\r\n          const before = students.slice(0, index);\r\n          const after = students.slice(index + 1);\r\n          const newList = [...before, message, ...after];\r\n          if (message._id != '604fb74012c7d21c984aed35')\r\n          setChosenStudent(message)\r\n          return newList\r\n        })\r\n      })\r\n    }\r\n\r\n  }, [socket])\r\n\r\n  async function getStudents() {\r\n    let users = false\r\n    users = await request('getUsers')\r\n    setStudents(users)\r\n    setChosenStudent(users[0])\r\n  }\r\n\r\n  return { students, chosenStudent, setChosenStudent }\r\n}","C:\\Users\\Zabilsya\\Desktop\\Cursovaya\\Calendar\\client\\src\\hooks\\request.hook.js",[],"C:\\Users\\Zabilsya\\Desktop\\Cursovaya\\Calendar\\client\\src\\pages\\PersonalInfoPage\\PersonalInfoPage.js",["156","157","158"],"import React, { useContext, useEffect, useState } from 'react'\r\nimport { StudentContext } from '../../context/StudentContext'\r\nimport { AuthContext } from '../../context/AuthContext'\r\nimport { useRequest } from '../../hooks/request.hook'\r\n\r\nimport './css/style.css'\r\n\r\nexport const PersonalInfoPage = () => {\r\n    const { userId } = useContext(AuthContext)\r\n    const { students } = useContext(StudentContext)\r\n    const request = useRequest()\r\n    const [form, setForm] = useState({\r\n        _id: userId, name: '', secondName: '', thirdName: '', email: '', admissionYear: ''\r\n    })\r\n    const isAdmin = userId == '604fb74012c7d21c984aed35'\r\n\r\n    const changeInputHandler = event => {\r\n        setForm({ ...form, [event.target.name]: event.target.value })\r\n    }\r\n\r\n    const saveChanges = async () => {\r\n        await request('updateUser', form)\r\n    }\r\n\r\n    useEffect(() => {\r\n        const student = students.filter(item => item._id == userId)[0]\r\n        setForm({\r\n            _id: student._id,\r\n            name: student.name,\r\n            secondName: student.secondName,\r\n            thirdName: student.thirdName,\r\n            email: student.email,\r\n            admissionYear: student.admissionYear\r\n        })\r\n\r\n    }, [students])\r\n\r\n\r\n    return (\r\n        <div className=\"personal-info-wrapper\">\r\n            <h1 className=\"personail-info-title\">Мой профиль</h1>\r\n            <div className=\"personal-info\">\r\n            <div className=\"form-floating mb-3\">\r\n                <input type=\"text\" className=\"form-control\" name=\"name\" value={form.name} onChange={changeInputHandler} id=\"name\" disabled={!isAdmin} />\r\n                <label htmlFor=\"name\">Имя</label>\r\n            </div>\r\n            <div className=\"form-floating mb-3\">\r\n                <input type=\"text\" className=\"form-control\" name=\"secondName\" value={form.secondName} onChange={changeInputHandler} id=\"secondName\" disabled={!isAdmin} />\r\n                <label htmlFor=\"secondName\">Фамилия</label>\r\n            </div>\r\n            <div className=\"form-floating mb-3\">\r\n                <input type=\"text\" className=\"form-control\" name=\"thirdName\" value={form.thirdName} onChange={changeInputHandler} id=\"thirdName\" disabled={!isAdmin} />\r\n                <label htmlFor=\"thirdName\">Отчество</label>\r\n            </div>\r\n            <div className=\"form-floating mb-3\">\r\n                <input type=\"email\" className=\"form-control\" name=\"email\" value={form.email} onChange={changeInputHandler} id=\"email\" />\r\n                <label htmlFor=\"email\">Электронная почта</label>\r\n            </div>\r\n            {!isAdmin  &&\r\n                <div className=\"form-floating mb-3\">\r\n                    <input type=\"number\" className=\"form-control\" name=\"admissionYear\" onChange={changeInputHandler} value={form.admissionYear} id=\"admissionYear\" disabled />\r\n                    <label htmlFor=\"admissionYear\">Год поступления</label>\r\n                </div>\r\n            }\r\n              <div className=\"form-floating form-floating-last\">\r\n                    <button className=\"button\" onClick={saveChanges}>Сохранить данные</button>\r\n              </div>\r\n              </div>\r\n        </div>\r\n    )\r\n}","C:\\Users\\Zabilsya\\Desktop\\Cursovaya\\Calendar\\client\\src\\pages\\CalendarPage\\CalendarPage.js",["159","160","161","162","163","164","165","166","167"],"import React, { useState, useContext, useEffect } from 'react'\r\nimport { CalendarHeader } from './CalendarHeader/CalendarHeader'\r\nimport { CalendarGrid } from './CalendarGrid/CalendarGrid'\r\nimport { ScheduleContext } from './../../context/ScheduleContext'\r\nimport { AuthContext } from './../../context/AuthContext'\r\nimport { StudentContext } from '../../context/StudentContext'\r\nimport moment from 'moment'\r\n\r\nimport './css/style.css'\r\n\r\nexport const CalendarPage = () => {\r\n    moment.updateLocale('en', { week: { dow: 1 } })\r\n    const [years, setYears] = useState(false)\r\n    const [today, setToday] = useState(moment())\r\n    const { students } = useContext(StudentContext)\r\n    let { events } = useContext(ScheduleContext)\r\n    const { userId } = useContext(AuthContext)\r\n    const [filter, setFilter] = useState({\r\n        student: 'default', year: '', priority: 'default', eventType: 'default'\r\n    })\r\n    const isAdmin = userId == '604fb74012c7d21c984aed35'\r\n    let eventTarget = userId\r\n    let listOfStudents, listOfEvents = events\r\n\r\n    if (isAdmin) {\r\n        listOfStudents = students.filter(student => student.admissionYear == filter.year)\r\n\r\n        if (filter.student == 'default') {\r\n            listOfEvents = events.filter(event => event.target == filter.year)\r\n            eventTarget = filter.year\r\n        }\r\n\r\n        else {\r\n            listOfEvents = events.filter(event => event.target == filter.student)\r\n            eventTarget = filter.student\r\n        }\r\n    }\r\n\r\n    if (filter.priority !== 'default')\r\n        listOfEvents = listOfEvents.filter(event => event.priority == filter.priority)\r\n    if (filter.eventType !== 'default')\r\n        listOfEvents = listOfEvents.filter(event => event.type == filter.eventType)\r\n\r\n    const startDay = today.clone().startOf('month').startOf('week')\r\n\r\n    const onPrevMonth = () => {\r\n        setToday(prev => prev.clone().subtract(1, 'month'))\r\n    }\r\n\r\n    const onNextMonth = () => {\r\n        setToday(prev => prev.clone().add(1, 'month'))\r\n    }\r\n\r\n    const changeFilterHandler = event => {\r\n        setFilter({ ...filter, [event.target.name]: event.target.value })\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (students && students.length > 0 && isAdmin) {\r\n            let years = []\r\n            students.forEach(element => {\r\n                if (!years.includes(element.admissionYear) && element._id != '604fb74012c7d21c984aed35')\r\n                    years.push(element.admissionYear)\r\n            });\r\n            years = years.sort((a, b) => a - b)\r\n            setYears(years)\r\n            setFilter({ ...filter, year: years[0] })\r\n        }\r\n    }, [students])\r\n\r\n\r\n    return (\r\n        <div className=\"main-page-wrapper\">\r\n        <div className=\"filters-wrapper\">\r\n            {((isAdmin && years && years.length > 0) || !isAdmin) &&\r\n            <>\r\n            <div className=\"filters-title\">Фильтры</div>\r\n            <div className=\"filters\">\r\n                {(isAdmin) &&\r\n                    <>\r\n                        <div className=\"year-filter filter\">\r\n                            <label htmlFor=\"year-filter\">Год поступления:</label>\r\n                            <select className=\"custom-select\" name=\"year\" id=\"year-filter\" value={filter.year} onChange={changeFilterHandler}>\r\n                                {years.map(year => (\r\n                                    <option value={year} key={year}>{year}</option>\r\n                                ))}\r\n                            </select>\r\n                        </div>\r\n                        <div className=\"student-filter filter\">\r\n                            <label htmlFor=\"student-filter\">Аспирант:</label>\r\n                            <select className=\"custom-select\" name=\"student\" id=\"student-filter\" value={filter.student} onChange={changeFilterHandler}>\r\n                                <option value='default'>Все</option>\r\n                                {listOfStudents.map(student => (\r\n                                    <option value={student._id} key={student._id}>{`${student.secondName} ${student.name} ${student.thirdName}`}</option>\r\n                                ))}\r\n                            </select>\r\n                        </div>\r\n                    </>\r\n                }\r\n                <div className=\"priority-filter filter\">\r\n                    <label htmlFor=\"priority-filter\">Приоритетность:</label>\r\n                    <select className=\"custom-select\" name=\"priority\" id=\"priority-filter\" value={filter.priority} onChange={changeFilterHandler}>\r\n                       <option value=\"default\">Все</option>\r\n                       <option value=\"low\">Низкий</option>\r\n                       <option value=\"medium\">Средний</option>\r\n                       <option value=\"high\">Высокий</option>\r\n                    </select>\r\n                </div>\r\n                <div className=\"event-type-filter filter\">\r\n                    <label htmlFor=\"event-type-filter\">Тип события:</label>\r\n                    <select className=\"custom-select\" name=\"eventType\" id=\"event-type-filter\" value={filter.eventType} onChange={changeFilterHandler}>\r\n                        <option value=\"default\">Все</option>\r\n                        <option value=\"Проект\">Проект</option>\r\n                        <option value=\"Экзамен\">Экзамен</option>\r\n                        <option value=\"Зачет\">Зачёт</option>\r\n                        <option value=\"Практика\">Практика</option>\r\n                        <option value=\"Научное_исследование\">Научное исследование</option>\r\n                        <option value=\"Государственная_итоговая_аттестация\">Государственная итоговая аттестация</option>\r\n                        <option value=\"Конференция\">Конференция</option>\r\n                        <option value=\"Мастер_класс\">Мастер-класс</option>\r\n                        <option value=\"Другое\">Другое</option>\r\n                    </select>\r\n                </div>\r\n            </div>\r\n            </>\r\n            }\r\n        </div>\r\n\r\n            <div className=\"calendar\">\r\n                <CalendarHeader today={today} onPrevMonth={onPrevMonth} onNextMonth={onNextMonth} />\r\n                <CalendarGrid startDay={startDay} today={today} events={listOfEvents} eventTarget={eventTarget} />\r\n            </div>\r\n        </div>\r\n    )\r\n}","C:\\Users\\Zabilsya\\Desktop\\Cursovaya\\Calendar\\client\\src\\pages\\AuthPage\\AuthPage.js",["168","169","170"],"import axios from 'axios';\r\nimport React, {useState, useContext} from 'react'\r\nimport { useRequest } from '../../hooks/request.hook';\r\nimport {AuthContext} from './../../context/AuthContext'\r\nimport URLs from './../../URLs';\r\n\r\nimport './css/style.css'\r\n\r\nexport const AuthPage = () => {\r\n    const auth = useContext(AuthContext)\r\n    const [form, setForm] = useState({\r\n        email: '', password: ''\r\n    });\r\n\r\n    const changeInputHandler = event => {\r\n        setForm({ ...form, [event.target.name]: event.target.value })\r\n    }\r\n\r\n    const loginHandler = async () => {\r\n        let response = await fetch('/api/auth/login', {\r\n            method: 'POST',\r\n            headers: {\r\n              'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(form)\r\n          })\r\n        const result = await response.json()\r\n        if(!response.ok) {\r\n            window.M.toast({html: result.message, classes: \"message\", displayLength: 2000})\r\n            return\r\n        }\r\n        auth.login(result.token, result.userId)\r\n    }\r\n\r\n    return (\r\n        <div className=\"auth\">\r\n            <div className=\"authorization\">\r\n                <h2 className='authorization-title'>Авторизация</h2>\r\n                <div className=\"authorization-content\">\r\n                    <div className=\"form-floating mb-3\">\r\n                        <input type=\"email\" className=\"form-control\" name=\"email\" value={form.email} onChange={changeInputHandler} id=\"floatingInput\" placeholder=\"name@example.com\" />\r\n                        <label htmlFor=\"floatingInput\">Email</label>\r\n                    </div>\r\n                    <div className=\"form-floating form-floating-last\">\r\n                        <input type=\"password\" className=\"form-control\" name=\"password\" value={form.password} onChange={changeInputHandler} id=\"floatingPassword\" placeholder=\"Password\" />\r\n                        <label htmlFor=\"floatingPassword\">Пароль</label>\r\n                    </div>\r\n                    <button type=\"button\" className=\"btn-sign\" onClick={loginHandler}>Войти</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","C:\\Users\\Zabilsya\\Desktop\\Cursovaya\\Calendar\\client\\src\\pages\\SupportPage\\SupportPage.js",[],"C:\\Users\\Zabilsya\\Desktop\\Cursovaya\\Calendar\\client\\src\\pages\\PostgraduatesInfoPage\\PostgraduatesInfoPage.js",["171","172","173"],"import React, { useState, useEffect, useContext } from 'react'\r\nimport { PostgraduatesTable } from './PostgraduatesTable/PostgraduatesTable'\r\nimport { ModalStudent } from '../../Components/ModalStudent/ModalStudent'\r\nimport { StudentContext } from '../../context/StudentContext'\r\n\r\nimport './css/style.css'\r\nimport { useStudents } from '../../hooks/students.hook'\r\n\r\nexport const PostgraduatesInfoPage = () => {\r\n    let {students, chosenStudent, setChosenStudent} = useContext(StudentContext)\r\n    const [isOpenModal, setIsOpenModal] = useState(false)\r\n    const [modalInfo, setModalInfo] = useState({\r\n        data: '', title: '', buttonText: ''\r\n    })\r\n\r\n    students = students.filter(user => user._id != '604fb74012c7d21c984aed35')\r\n\r\n    const chooseStudent = student => {\r\n        setChosenStudent(student)\r\n    }\r\n\r\n    const addStudent = () => {\r\n        setModalInfo({\r\n            data: false, title: 'Добавление аспиранта', buttonText: 'Добавить'\r\n        })\r\n        setIsOpenModal(true)\r\n    }\r\n\r\n    const editStudent = () => {\r\n        setModalInfo({\r\n            data: chosenStudent, title: 'Редактирование информации об аспиранте', buttonText: 'Сохранить'\r\n        })\r\n        setIsOpenModal(true)\r\n    }\r\n\r\n    const deleteStudent = () => {\r\n        setModalInfo({\r\n            data: chosenStudent, title: 'Удаление аспиранта', buttonText: 'Удалить'\r\n        })\r\n        setIsOpenModal(true)\r\n    }\r\n\r\n    const closeModal = () => {\r\n        setIsOpenModal(false)\r\n    }\r\n\r\n    return (\r\n        <div className=\"info\">\r\n            <div className=\"content-elements\">\r\n                <PostgraduatesTable students={students} chooseStudent={chooseStudent} chosenStudent={chosenStudent}/>\r\n            </div>\r\n            {students.length > 0 && \r\n                <div className=\"buttons\">\r\n                    <button type=\"button\" className=\"button\" onClick={editStudent}>Редактировать информацию об аспиранте</button>\r\n                    <button type=\"button\" className=\"button\" onClick={addStudent}>Добавить аспиранта</button>\r\n                    <button type=\"button\" className=\"button\" onClick={deleteStudent}>Удалить аспиранта</button>\r\n                </div>\r\n            }\r\n            {isOpenModal && \r\n                <ModalStudent modalInfo={modalInfo} onClose={closeModal}/>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n","C:\\Users\\Zabilsya\\Desktop\\Cursovaya\\Calendar\\client\\src\\URLs.js",[],"C:\\Users\\Zabilsya\\Desktop\\Cursovaya\\Calendar\\client\\src\\pages\\CalendarPage\\CalendarHeader\\CalendarHeader.js",[],"C:\\Users\\Zabilsya\\Desktop\\Cursovaya\\Calendar\\client\\src\\pages\\CalendarPage\\CalendarGrid\\CalendarGrid.js",["174","175"],"import React, { useState, useContext } from 'react';\r\nimport moment from 'moment'\r\nimport {CalendarDay} from './../CalendarDay/CalendarDay'\r\n\r\nimport './css/style.css'\r\n\r\nexport const CalendarGrid = ({ startDay, today, events, eventTarget }) => {\r\n    const filteredEvents = events.filter(event => event.startDt.isSame(today, 'month'))\r\n    const totalDays = 42\r\n    const day = startDay.clone().subtract(1, 'day')\r\n    const daysArr = [...Array(totalDays)].map(() => day.add(1, 'day').clone())\r\n    const isCurrentDay = day => moment().isSame(day, 'day')\r\n    const isSelectedMonth = day => today.isSame(day, 'month')\r\n\r\n    return (\r\n        <>\r\n            <div className=\"calendar-grid-header\">\r\n                {[...Array(7)].map((item, index) => (\r\n                    <div className=\"day-of-week\" key={index}>\r\n                        {moment().day(index + 1).format('ddd')}\r\n                    </div>\r\n                ))}\r\n            </div>\r\n            <div className=\"calendar-grid\">\r\n                {\r\n                    daysArr.map((day, index) => {\r\n                        const dayEvents = filteredEvents.filter(event => event.startDt.isSame(day, 'day')).sort((left, right) => left.startDt.diff(right.startDt))\r\n                        return <CalendarDay day={day} dayEvents={dayEvents} isCurrentDay={isCurrentDay} isSelectedMonth={isSelectedMonth} eventTarget={eventTarget} key={index}/>\r\n                    })\r\n                }\r\n            </div>\r\n        </>\r\n    )\r\n}","C:\\Users\\Zabilsya\\Desktop\\Cursovaya\\Calendar\\client\\src\\Components\\ModalStudent\\ModalStudent.js",["176","177"],"import React, { useEffect, useState } from 'react'\r\nimport ReactDOM from 'react-dom';\r\nimport { useRequest } from '../../hooks/request.hook';\r\nimport { Student } from '../Student/Student'\r\n\r\nimport './css/style.css'\r\n\r\nexport const ModalStudent = ({ modalInfo, onClose }) => {\r\n    const { data, title, buttonText } = modalInfo\r\n    const request = useRequest()\r\n\r\n    const onConfirmChanges = async form => {\r\n        switch (buttonText) {\r\n            case 'Добавить':\r\n                await request('addUser', form)\r\n                break\r\n            case 'Сохранить':\r\n                await request('updateUser', form)\r\n                break\r\n            case 'Удалить':\r\n                await request('deleteUser', form)\r\n                break\r\n            default: break\r\n        }\r\n           onClose()\r\n    }\r\n\r\n    return (\r\n        ReactDOM.createPortal(\r\n            <div className=\"overlay\" onClick={onClose}>\r\n                <div className=\"modal\" onClick={e => e.stopPropagation()}>\r\n                    <div className=\"modal-header\">\r\n                        <h2 className=\"modal-title\">{title}</h2>\r\n                        <div className=\"modal-close\" onClick={onClose}></div>\r\n                    </div>\r\n                        <Student data={data} buttonText={buttonText} onConfirm={onConfirmChanges} />\r\n                </div>\r\n            </div>,\r\n            document.getElementById('modal')\r\n        )\r\n    )\r\n}","C:\\Users\\Zabilsya\\Desktop\\Cursovaya\\Calendar\\client\\src\\pages\\PostgraduatesInfoPage\\PostgraduatesTable\\PostgraduatesTable.js",["178","179","180"],"import React, { useEffect, useState } from 'react';\r\nimport { useRequest } from './../../../hooks/request.hook'\r\nimport { PostgraduatesTableElement } from './PostgraduatesTableElement/PostgraduatesTableElement'\r\n\r\nimport './css/style.css'\r\n\r\nexport const PostgraduatesTable = ({ students, chooseStudent, chosenStudent }) => {\r\n\r\n    return (\r\n        <>\r\n            {students &&\r\n                <>\r\n                <h2 className=\"main-table-title\">Список аспирантов</h2>\r\n                <div className=\"main-table-header\">\r\n                    <table className=\"table-header table-bordered\">\r\n                        <tr className=\"main-table-header-row\">\r\n                            <th className=\"main-table-header-item\">id</th>\r\n                            <th className=\"main-table-header-item\">Фамилия</th>\r\n                            <th className=\"main-table-header-item\">Имя</th>\r\n                            <th className=\"main-table-header-item\">Отчество</th>\r\n                            <th className=\"main-table-header-item\">Электронная почта</th>\r\n                            <th className=\"main-table-header-item\">Год поступления</th>\r\n                        </tr>\r\n                    </table>\r\n                </div>\r\n                    <div className=\"main-table-wrapper\">\r\n                        <table className=\"table table-bordered\">\r\n                            <tbody>\r\n                                {\r\n                                    students.map((student, count) => (\r\n                                        <PostgraduatesTableElement key={student._id} student={student} count={count + 1} chosenStudent={chosenStudent} onChooseStudent={() => chooseStudent(student)} />\r\n                                    ))\r\n                                }\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                </>\r\n            }\r\n            {students === '' && <h1 className=\"error-title\">Не найдено ни одного аспиранта!</h1>}\r\n        </>\r\n    )\r\n}","C:\\Users\\Zabilsya\\Desktop\\Cursovaya\\Calendar\\client\\src\\pages\\CalendarPage\\CalendarDay\\CalendarDay.js",["181"],"import React, { useState } from 'react';\r\nimport moment from 'moment'\r\nimport { ModalEvents } from '../../../Components/ModalEvents/ModalEvents'\r\n\r\nimport eventTypes from '../../../data/eventTypes'\r\n\r\nimport './css/style.css'\r\n\r\nexport const CalendarDay = ({ day, dayEvents, isCurrentDay, isSelectedMonth, eventTarget }) => {\r\n    const [isOpenModal, setIsOpenModal] = useState(false)\r\n    const events = checkNumberOfEvents()\r\n\r\n    const openModal = () => {\r\n        setIsOpenModal(true)\r\n    }\r\n\r\n    const closeModal = () => {\r\n        setIsOpenModal(false)\r\n    }\r\n\r\n    function checkNumberOfEvents() {\r\n        if (dayEvents.length === 0) {\r\n            return ''\r\n        }\r\n        if (dayEvents.length <= 2) {\r\n            return dayEvents.map(event => (\r\n                <div className=\"event\" style={{ background: eventTypes[event.type] }} key={event._id}>\r\n                    {`${moment(event.startDt).format('HH:mm')} ${event.name}`}\r\n                </div>))\r\n        }\r\n        let temp = 0\r\n        return dayEvents.map(event => {\r\n            temp++\r\n            if (temp > 2) return\r\n            return (<div className=\"event\" style={{ background: eventTypes[event.type] }} key={event._id}>\r\n                {`${moment(event.startDt).format('HH:mm')} ${event.name}`}\r\n            </div>)\r\n        })\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"day\" onClick={isSelectedMonth(day) ? openModal : () => { }} key={day.unix()}>\r\n                <div className={isCurrentDay(day) ? \"number-wrapper current\" : \"number-wrapper\"}>\r\n                    <div className={isSelectedMonth(day) ? \"number\" : \"number not-current\"}>\r\n                        {day.format('D')}\r\n                    </div>\r\n                </div>\r\n                <div className=\"events\">\r\n                    {events}\r\n                </div>\r\n            </div>\r\n            {isOpenModal &&\r\n                <ModalEvents title={day.format('LL')} day={day} onClose={closeModal} dayEvents={dayEvents} eventTarget={eventTarget} />\r\n            }\r\n        </>\r\n    )\r\n}","C:\\Users\\Zabilsya\\Desktop\\Cursovaya\\Calendar\\client\\src\\Components\\Student\\Student.js",[],"C:\\Users\\Zabilsya\\Desktop\\Cursovaya\\Calendar\\client\\src\\pages\\PostgraduatesInfoPage\\PostgraduatesTable\\PostgraduatesTableElement\\PostgraduatesTableElement.js",["182","183"],"import React, { useEffect, useState } from 'react';\r\n\r\nimport './css/style.css'\r\n\r\nexport const PostgraduatesTableElement = ({student, onChooseStudent, chosenStudent, count}) => {\r\n    const {_id, name, secondName, thirdName, email, admissionYear} = student\r\n\r\n    return (\r\n        <tr className={chosenStudent ? chosenStudent._id === _id ? \"student-info chosen-student\" : \"student-info\" : \"student-info\" } onClick={onChooseStudent}>\r\n            <td className=\"student-info-item\">{count}</td>\r\n            <td className=\"student-info-item\">{name}</td>\r\n            <td className=\"student-info-item\">{secondName}</td>\r\n            <td className=\"student-info-item\">{thirdName}</td>\r\n            <td className=\"student-info-item\">{email}</td>\r\n            <td className=\"student-info-item\">{admissionYear}</td>\r\n        </tr>\r\n    )\r\n}","C:\\Users\\Zabilsya\\Desktop\\Cursovaya\\Calendar\\client\\src\\data\\eventTypes.js",[],"C:\\Users\\Zabilsya\\Desktop\\Cursovaya\\Calendar\\client\\src\\Components\\ModalEvents\\ModalEvents.js",["184","185"],"import React, { useEffect, useState } from 'react'\r\nimport ReactDOM from 'react-dom';\r\nimport moment from \"moment\";\r\nimport { useRequest } from '../../hooks/request.hook';\r\nimport { Event } from '../Event/Event'\r\n\r\nimport './css/style.css'\r\n\r\nexport const ModalEvents = ({ title, day, dayEvents, onClose, eventTarget }) => {\r\n    const [isAdding, setIsAdding] = useState(false)\r\n    const request = useRequest()\r\n\r\n    const changeModalMode = () => {\r\n        setIsAdding(isAdding => !isAdding)\r\n    }\r\n\r\n\r\n    const onConfirmChanges = async (type, form) => {\r\n        // form.startDatetime = moment(form.startDatetime).subtract(5, 'h')\r\n        await request(type, form)\r\n    }\r\n\r\n    return (\r\n        ReactDOM.createPortal(\r\n            <div className=\"overlay\" onClick={onClose}>\r\n                <div className=\"modal\" onClick={e => e.stopPropagation()}>\r\n                    <div className=\"modal-header\">\r\n                        <h2 className=\"modal-title\">{title}</h2>\r\n                        <div className=\"modal-close\" onClick={onClose}></div>\r\n                    </div>\r\n                    <div className=\"modal-body\">\r\n                        {(dayEvents.length !== 0 && !isAdding) &&\r\n                            dayEvents.map(data => (\r\n                                <Event data={data} day={day} reveal={false} changeModalMode={changeModalMode} onConfirmChanges={onConfirmChanges} eventTarget={eventTarget} key={data._id} />\r\n                            ))\r\n                        }\r\n                        {isAdding && <Event data={''} day={day} reveal={true} changeModalMode={changeModalMode} onConfirmChanges={onConfirmChanges} eventTarget={eventTarget} />}\r\n                        {(!isAdding && dayEvents.length === 0) &&\r\n                            <h4 className=\"event-title\">Мероприятий на данный день не запланировано</h4>\r\n                        }\r\n                    </div>\r\n                    {!isAdding &&\r\n                        <div className=\"modal-footer\">\r\n                            <button className=\"modal-footer-button\" onClick={changeModalMode}>Добавить мероприятие</button>\r\n                        </div>\r\n                    }\r\n                </div>\r\n            </div>,\r\n            document.getElementById('modal')\r\n        )\r\n    )\r\n}","C:\\Users\\Zabilsya\\Desktop\\Cursovaya\\Calendar\\client\\src\\Components\\Event\\Event.js",["186","187"],"import React, { useEffect, useState } from 'react'\r\nimport moment from \"moment\";\r\nimport MomentUtils from \"@date-io/moment\";\r\nimport 'date-fns'\r\nimport DateFnsUtils from '@date-io/date-fns'\r\nimport {\r\n    MuiPickersUtilsProvider,\r\n    DatePicker,\r\n    TimePicker\r\n} from '@material-ui/pickers'\r\nimport eventTypes from '../../data/eventTypes'\r\n\r\nimport './css/style.css'\r\n\r\nexport const Event = ({ data, day, reveal, changeModalMode, onConfirmChanges, eventTarget }) => {\r\n    const [form, setForm] = useState({\r\n        _id: '', name: '', description: '', startDt: day, priority: 'low', type: 'Проект', notificationPeriod: '1', info: '', target: eventTarget\r\n    })\r\n    const [eventVisibility, setEventVisibility] = useState(reveal)\r\n    const [editingMode, setEditingMode] = useState(reveal)\r\n    const toggleEventVisibility = () => {\r\n        setEventVisibility(eventVisibility => !eventVisibility)\r\n    }\r\n\r\n    const turnOnEditingMode = () => {\r\n        setEditingMode(true)\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (data) {\r\n            setForm(prev => ({\r\n                _id: data._id,\r\n                name: data.name,\r\n                description: data.description,\r\n                startDt: data.startDt,\r\n                priority: data.priority,\r\n                type: data.type,\r\n                notificationPeriod: data.notificationPeriod,\r\n                info: data.info,\r\n                target: prev.target\r\n            }))\r\n        }\r\n        if (reveal) {\r\n            setEventVisibility(true)\r\n            turnOnEditingMode()\r\n        }\r\n    }, [data])\r\n\r\n    const changeInputHandler = event => {\r\n        setForm({ ...form, [event.target.name]: event.target.value })\r\n    }\r\n\r\n    const changeStartDateHandler = date => {\r\n        setForm({ ...form, startDt: date })\r\n    }\r\n\r\n    const cancelAdding = () => {\r\n        if (reveal) changeModalMode()\r\n        else {\r\n            setEditingMode(false)\r\n            setForm({\r\n                _id: data._id,\r\n                name: data.name,\r\n                description: data.description,\r\n                startDt: data.startDt,\r\n                priority: data.priority,\r\n                type: data.type,\r\n                notificationPeriod: data.notificationPeriod,\r\n                info: data.info\r\n            })\r\n        }\r\n    }\r\n\r\n    const saveChanges = () => {\r\n        if (reveal) {\r\n            onConfirmChanges('addEvent', form)\r\n            changeModalMode()\r\n        }\r\n        else {\r\n            onConfirmChanges('updateEvent', form)\r\n            setEditingMode(false)\r\n        }\r\n    }\r\n\r\n    const deleteEvent = () => {\r\n        onConfirmChanges('deleteEvent', form)\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            {!reveal ?\r\n                <div className=\"event-line\" onClick={toggleEventVisibility} style={{ background: eventTypes[form.type] }}>\r\n                    <div className=\"event-time\">\r\n                        {moment(form.startDt).format('HH:mm')}\r\n                    </div>\r\n                    <div className=\"event-name\">\r\n                        {data.name}\r\n                    </div>\r\n                    <div className={eventVisibility ? 'arrow top' : 'arrow down'}></div>\r\n                </div> :\r\n                <h3>Новое мероприятие:</h3>\r\n            }\r\n\r\n            <div className={eventVisibility ? 'event-wrapper show' : 'event-wrapper hide'}>\r\n                <div className=\"form-floating mb-3\">\r\n                    <input type=\"text\" className=\"form-control\" name=\"name\" value={form.name} onChange={changeInputHandler} readOnly={!editingMode} />\r\n                    <label htmlFor=\"name\">Название события</label>\r\n                </div>\r\n                <div className=\"select\">\r\n                    <label htmlFor=\"type\">Тип события</label>\r\n                    <select className=\"custom-select\" name=\"type\" value={form.type} onChange={changeInputHandler} disabled={!editingMode}>\r\n                        <option value=\"Проект\">Проект</option>\r\n                        <option value=\"Экзамен\">Экзамен</option>\r\n                        <option value=\"Зачет\">Зачёт</option>\r\n                        <option value=\"Практика\">Практика</option>\r\n                        <option value=\"Научное_исследование\">Научное исследование</option>\r\n                        <option value=\"Государственная_итоговая_аттестация\">Государственная итоговая аттестация</option>\r\n                        <option value=\"Конференция\">Конференция</option>\r\n                        <option value=\"Мастер_класс\">Мастер-класс</option>\r\n                        <option value=\"Другое\">Другое</option>\r\n                    </select>\r\n                </div>\r\n\r\n                <div className=\"form-floating mb-3 data time\">\r\n                    <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                        <DatePicker\r\n                            readOnly={!editingMode}\r\n                            variant=\"inline\"\r\n                            ampm={false}\r\n                            label=\"Дата\"\r\n                            value={form.startDt}\r\n                            onChange={changeStartDateHandler}\r\n                            disablePast\r\n                            format=\"dd/MM/yyyy\"\r\n                        />\r\n                        <TimePicker\r\n                            readOnly={!editingMode}\r\n                            ampm={false}\r\n                            label=\"Время\"\r\n                            value={form.startDt}\r\n                            onChange={changeStartDateHandler}\r\n                        />\r\n                    </MuiPickersUtilsProvider>\r\n                </div>\r\n                <h6 className=\"label\">Приоритет</h6>\r\n                <div className=\"form-floating mb-3 data priority\">\r\n                    <div className=\"form-check low\">\r\n                        <input className=\"form-check-input\" type=\"radio\" onChange={changeInputHandler} value=\"low\" checked={form.priority === \"low\"} name=\"priority\" id=\"lowRadio\" disabled={!editingMode} />\r\n                        <label className=\"form-check-label\" htmlFor=\"lowRadio\">\r\n                            Низкий\r\n                    </label>\r\n                    </div>\r\n                    <div className=\"form-check medium\">\r\n                        <input className=\"form-check-input\" type=\"radio\" onChange={changeInputHandler} value=\"medium\" checked={form.priority === \"medium\"} name=\"priority\" id=\"mediumRadio\" disabled={!editingMode} />\r\n                        <label className=\"form-check-label\" htmlFor=\"mediumRadio\">\r\n                            Средний\r\n                    </label>\r\n                    </div>\r\n                    <div className=\"form-check high\">\r\n                        <input className=\"form-check-input\" type=\"radio\" onChange={changeInputHandler} value=\"high\" checked={form.priority === \"high\"} name=\"priority\" id=\"highRadio\" disabled={!editingMode} />\r\n                        <label className=\"form-check-label\" htmlFor=\"highRadio\">\r\n                            Высокий\r\n                    </label>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"select\">\r\n                    <label htmlFor=\"notificationPeriod\">Частота напоминания</label>\r\n                    <select className=\"custom-select\" name=\"notificationPeriod\" id=\"notificationPeriod\" value={form.notificationPeriod.toString()} onChange={changeInputHandler} disabled={!editingMode}>\r\n                        <option value=\"1\">Каждый день</option>\r\n                        <option value=\"7\">Каждую неделю</option>\r\n                        <option value=\"30\">Каждый месяц</option>\r\n                    </select>\r\n                </div>\r\n\r\n                <div className={eventVisibility ? 'modal-buttons show' : 'modal-buttons hide'}>\r\n                    <button className=\"modal-footer-button\" onClick={editingMode ? saveChanges : turnOnEditingMode}>{editingMode ? 'Сохранить' : 'Редактировать'}</button>\r\n                    <button className=\"modal-footer-button\" onClick={editingMode ? cancelAdding : deleteEvent}>{editingMode ? 'Отменить' : 'Удалить'}</button>\r\n                </div>\r\n\r\n            </div>\r\n\r\n        </>\r\n    )\r\n}",["188","189"],"C:\\Users\\Zabilsya\\Desktop\\Cursovaya\\Calendar\\client\\src\\context\\StudentContext.js",[],{"ruleId":"190","replacedBy":"191"},{"ruleId":"192","replacedBy":"193"},{"ruleId":"194","severity":1,"message":"195","line":40,"column":6,"nodeType":"196","endLine":40,"endColumn":14,"suggestions":"197"},{"ruleId":"194","severity":1,"message":"198","line":36,"column":6,"nodeType":"196","endLine":36,"endColumn":14,"suggestions":"199"},{"ruleId":"200","severity":1,"message":"201","line":1,"column":10,"nodeType":"202","messageId":"203","endLine":1,"endColumn":20},{"ruleId":"200","severity":1,"message":"204","line":4,"column":10,"nodeType":"202","messageId":"203","endLine":4,"endColumn":25},{"ruleId":"194","severity":1,"message":"205","line":43,"column":8,"nodeType":"196","endLine":43,"endColumn":16,"suggestions":"206"},{"ruleId":"200","severity":1,"message":"201","line":1,"column":17,"nodeType":"202","messageId":"203","endLine":1,"endColumn":27},{"ruleId":"200","severity":1,"message":"207","line":1,"column":29,"nodeType":"202","messageId":"203","endLine":1,"endColumn":38},{"ruleId":"200","severity":1,"message":"208","line":2,"column":10,"nodeType":"202","messageId":"203","endLine":2,"endColumn":26},{"ruleId":"200","severity":1,"message":"209","line":3,"column":10,"nodeType":"202","messageId":"203","endLine":3,"endColumn":20},{"ruleId":"200","severity":1,"message":"210","line":1,"column":8,"nodeType":"202","messageId":"203","endLine":1,"endColumn":13},{"ruleId":"200","severity":1,"message":"201","line":1,"column":38,"nodeType":"202","messageId":"203","endLine":1,"endColumn":48},{"ruleId":"200","severity":1,"message":"204","line":2,"column":10,"nodeType":"202","messageId":"203","endLine":2,"endColumn":25},{"ruleId":"211","severity":1,"message":"212","line":32,"column":27,"nodeType":"213","messageId":"214","endLine":32,"endColumn":29},{"ruleId":"194","severity":1,"message":"215","line":39,"column":6,"nodeType":"196","endLine":39,"endColumn":14,"suggestions":"216"},{"ruleId":"211","severity":1,"message":"217","line":15,"column":28,"nodeType":"213","messageId":"214","endLine":15,"endColumn":30},{"ruleId":"211","severity":1,"message":"217","line":26,"column":58,"nodeType":"213","messageId":"214","endLine":26,"endColumn":60},{"ruleId":"194","severity":1,"message":"195","line":36,"column":8,"nodeType":"196","endLine":36,"endColumn":18,"suggestions":"218"},{"ruleId":"211","severity":1,"message":"217","line":21,"column":28,"nodeType":"213","messageId":"214","endLine":21,"endColumn":30},{"ruleId":"211","severity":1,"message":"217","line":26,"column":75,"nodeType":"213","messageId":"214","endLine":26,"endColumn":77},{"ruleId":"211","severity":1,"message":"217","line":28,"column":28,"nodeType":"213","messageId":"214","endLine":28,"endColumn":30},{"ruleId":"211","severity":1,"message":"217","line":29,"column":64,"nodeType":"213","messageId":"214","endLine":29,"endColumn":66},{"ruleId":"211","severity":1,"message":"217","line":34,"column":64,"nodeType":"213","messageId":"214","endLine":34,"endColumn":66},{"ruleId":"211","severity":1,"message":"217","line":40,"column":68,"nodeType":"213","messageId":"214","endLine":40,"endColumn":70},{"ruleId":"211","severity":1,"message":"217","line":42,"column":64,"nodeType":"213","messageId":"214","endLine":42,"endColumn":66},{"ruleId":"211","severity":1,"message":"212","line":62,"column":75,"nodeType":"213","messageId":"214","endLine":62,"endColumn":77},{"ruleId":"194","severity":1,"message":"219","line":69,"column":8,"nodeType":"196","endLine":69,"endColumn":18,"suggestions":"220"},{"ruleId":"200","severity":1,"message":"221","line":1,"column":8,"nodeType":"202","messageId":"203","endLine":1,"endColumn":13},{"ruleId":"200","severity":1,"message":"209","line":3,"column":10,"nodeType":"202","messageId":"203","endLine":3,"endColumn":20},{"ruleId":"200","severity":1,"message":"222","line":5,"column":8,"nodeType":"202","messageId":"203","endLine":5,"endColumn":12},{"ruleId":"200","severity":1,"message":"207","line":1,"column":27,"nodeType":"202","messageId":"203","endLine":1,"endColumn":36},{"ruleId":"200","severity":1,"message":"223","line":7,"column":10,"nodeType":"202","messageId":"203","endLine":7,"endColumn":21},{"ruleId":"211","severity":1,"message":"212","line":16,"column":49,"nodeType":"213","messageId":"214","endLine":16,"endColumn":51},{"ruleId":"200","severity":1,"message":"224","line":1,"column":17,"nodeType":"202","messageId":"203","endLine":1,"endColumn":25},{"ruleId":"200","severity":1,"message":"201","line":1,"column":27,"nodeType":"202","messageId":"203","endLine":1,"endColumn":37},{"ruleId":"200","severity":1,"message":"207","line":1,"column":17,"nodeType":"202","messageId":"203","endLine":1,"endColumn":26},{"ruleId":"200","severity":1,"message":"224","line":1,"column":28,"nodeType":"202","messageId":"203","endLine":1,"endColumn":36},{"ruleId":"200","severity":1,"message":"207","line":1,"column":17,"nodeType":"202","messageId":"203","endLine":1,"endColumn":26},{"ruleId":"200","severity":1,"message":"224","line":1,"column":28,"nodeType":"202","messageId":"203","endLine":1,"endColumn":36},{"ruleId":"200","severity":1,"message":"209","line":2,"column":10,"nodeType":"202","messageId":"203","endLine":2,"endColumn":20},{"ruleId":"225","severity":1,"message":"226","line":34,"column":27,"nodeType":"227","messageId":"228","endLine":34,"endColumn":33},{"ruleId":"200","severity":1,"message":"207","line":1,"column":17,"nodeType":"202","messageId":"203","endLine":1,"endColumn":26},{"ruleId":"200","severity":1,"message":"224","line":1,"column":28,"nodeType":"202","messageId":"203","endLine":1,"endColumn":36},{"ruleId":"200","severity":1,"message":"207","line":1,"column":17,"nodeType":"202","messageId":"203","endLine":1,"endColumn":26},{"ruleId":"200","severity":1,"message":"229","line":3,"column":8,"nodeType":"202","messageId":"203","endLine":3,"endColumn":14},{"ruleId":"200","severity":1,"message":"230","line":3,"column":8,"nodeType":"202","messageId":"203","endLine":3,"endColumn":19},{"ruleId":"194","severity":1,"message":"231","line":47,"column":8,"nodeType":"196","endLine":47,"endColumn":14,"suggestions":"232"},{"ruleId":"190","replacedBy":"233"},{"ruleId":"192","replacedBy":"234"},"no-native-reassign",["235"],"no-negated-in-lhs",["236"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'userId'. Either include it or remove the dependency array.","ArrayExpression",["237"],"React Hook useEffect has a missing dependency: 'getEvents'. Either include it or remove the dependency array.",["238"],"no-unused-vars","'useContext' is defined but never used.","Identifier","unusedVar","'ScheduleContext' is defined but never used.","React Hook useEffect has a missing dependency: 'getNotifications'. Either include it or remove the dependency array.",["239"],"'useEffect' is defined but never used.","'useNotifications' is defined but never used.","'useRequest' is defined but never used.","'React' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","React Hook useEffect has a missing dependency: 'getStudents'. Either include it or remove the dependency array.",["240"],"Expected '===' and instead saw '=='.",["241"],"React Hook useEffect has missing dependencies: 'filter' and 'isAdmin'. Either include them or remove the dependency array. You can also do a functional update 'setFilter(f => ...)' if you only need 'filter' in the 'setFilter' call.",["242"],"'axios' is defined but never used.","'URLs' is defined but never used.","'useStudents' is defined but never used.","'useState' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ReturnStatement","expectedReturnValue","'moment' is defined but never used.","'MomentUtils' is defined but never used.","React Hook useEffect has a missing dependency: 'reveal'. Either include it or remove the dependency array.",["243"],["235"],["236"],"no-global-assign","no-unsafe-negation",{"desc":"244","fix":"245"},{"desc":"246","fix":"247"},{"desc":"248","fix":"249"},{"desc":"250","fix":"251"},{"desc":"252","fix":"253"},{"desc":"254","fix":"255"},{"desc":"256","fix":"257"},"Update the dependencies array to be: [socket, userId]",{"range":"258","text":"259"},"Update the dependencies array to be: [getEvents, socket]",{"range":"260","text":"261"},"Update the dependencies array to be: [getNotifications, socket]",{"range":"262","text":"263"},"Update the dependencies array to be: [getStudents, socket]",{"range":"264","text":"265"},"Update the dependencies array to be: [students, userId]",{"range":"266","text":"267"},"Update the dependencies array to be: [filter, isAdmin, students]",{"range":"268","text":"269"},"Update the dependencies array to be: [data, reveal]",{"range":"270","text":"271"},[927,935],"[socket, userId]",[1097,1105],"[getEvents, socket]",[1613,1621],"[getNotifications, socket]",[1295,1303],"[getStudents, socket]",[1231,1241],"[students, userId]",[2633,2643],"[filter, isAdmin, students]",[1569,1575],"[data, reveal]"]