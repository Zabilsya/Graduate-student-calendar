[{"C:\\Users\\Zabilsya\\Desktop\\Cursovaya\\Calendar\\client\\src\\index.js":"1","C:\\Users\\Zabilsya\\Desktop\\Cursovaya\\Calendar\\client\\src\\App.js":"2","C:\\Users\\Zabilsya\\Desktop\\Cursovaya\\Calendar\\client\\src\\reportWebVitals.js":"3","C:\\Users\\Zabilsya\\Desktop\\Cursovaya\\Calendar\\client\\src\\routes.js":"4","C:\\Users\\Zabilsya\\Desktop\\Cursovaya\\Calendar\\client\\src\\hooks\\auth.hook.js":"5","C:\\Users\\Zabilsya\\Desktop\\Cursovaya\\Calendar\\client\\src\\hooks\\schedule.hook.js":"6","C:\\Users\\Zabilsya\\Desktop\\Cursovaya\\Calendar\\client\\src\\context\\AuthContext.js":"7","C:\\Users\\Zabilsya\\Desktop\\Cursovaya\\Calendar\\client\\src\\context\\ScheduleContext.js":"8","C:\\Users\\Zabilsya\\Desktop\\Cursovaya\\Calendar\\client\\src\\Components\\Navigation\\Navigation.js":"9","C:\\Users\\Zabilsya\\Desktop\\Cursovaya\\Calendar\\client\\src\\hooks\\request.hook.js":"10","C:\\Users\\Zabilsya\\Desktop\\Cursovaya\\Calendar\\client\\src\\pages\\PersonalInfoPage\\PersonalInfoPage.js":"11","C:\\Users\\Zabilsya\\Desktop\\Cursovaya\\Calendar\\client\\src\\pages\\SupportPage\\SupportPage.js":"12","C:\\Users\\Zabilsya\\Desktop\\Cursovaya\\Calendar\\client\\src\\pages\\CalendarPage\\CalendarPage.js":"13","C:\\Users\\Zabilsya\\Desktop\\Cursovaya\\Calendar\\client\\src\\pages\\AuthPage\\AuthPage.js":"14","C:\\Users\\Zabilsya\\Desktop\\Cursovaya\\Calendar\\client\\src\\pages\\PostgraduatesInfoPage\\PostgraduatesInfoPage.js":"15","C:\\Users\\Zabilsya\\Desktop\\Cursovaya\\Calendar\\client\\src\\URLs.js":"16","C:\\Users\\Zabilsya\\Desktop\\Cursovaya\\Calendar\\client\\src\\hooks\\students.hook.js":"17","C:\\Users\\Zabilsya\\Desktop\\Cursovaya\\Calendar\\client\\src\\pages\\CalendarPage\\CalendarHeader\\CalendarHeader.js":"18","C:\\Users\\Zabilsya\\Desktop\\Cursovaya\\Calendar\\client\\src\\pages\\PostgraduatesInfoPage\\PostgraduatesTable\\PostgraduatesTable.js":"19","C:\\Users\\Zabilsya\\Desktop\\Cursovaya\\Calendar\\client\\src\\pages\\CalendarPage\\CalendarGrid\\CalendarGrid.js":"20","C:\\Users\\Zabilsya\\Desktop\\Cursovaya\\Calendar\\client\\src\\Components\\ModalStudent\\ModalStudent.js":"21","C:\\Users\\Zabilsya\\Desktop\\Cursovaya\\Calendar\\client\\src\\pages\\CalendarPage\\CalendarDay\\CalendarDay.js":"22","C:\\Users\\Zabilsya\\Desktop\\Cursovaya\\Calendar\\client\\src\\pages\\PostgraduatesInfoPage\\PostgraduatesTable\\PostgraduatesTableElement\\PostgraduatesTableElement.js":"23","C:\\Users\\Zabilsya\\Desktop\\Cursovaya\\Calendar\\client\\src\\Components\\Student\\Student.js":"24","C:\\Users\\Zabilsya\\Desktop\\Cursovaya\\Calendar\\client\\src\\Components\\ModalEvents\\ModalEvents.js":"25","C:\\Users\\Zabilsya\\Desktop\\Cursovaya\\Calendar\\client\\src\\Components\\Event\\Event.js":"26","C:\\Users\\Zabilsya\\Desktop\\Cursovaya\\Calendar\\client\\src\\Components\\Dropdown\\Dropdown.js":"27","C:\\Users\\Zabilsya\\Desktop\\Cursovaya\\Calendar\\client\\src\\scripts\\script.js":"28","C:\\Users\\Zabilsya\\Desktop\\Cursovaya\\Calendar\\client\\src\\data\\eventTypes.js":"29","C:\\Users\\Zabilsya\\Desktop\\Cursovaya\\Calendar\\client\\src\\Components\\NotificationMenu\\NotificationMenu.js":"30","C:\\Users\\Zabilsya\\Desktop\\Cursovaya\\Calendar\\client\\src\\hooks\\notification.hook.js":"31"},{"size":494,"mtime":1615310821448,"results":"32","hashOfConfig":"33"},{"size":1319,"mtime":1616534955186,"results":"34","hashOfConfig":"33"},{"size":375,"mtime":1615310821455,"results":"35","hashOfConfig":"33"},{"size":1629,"mtime":1616535437175,"results":"36","hashOfConfig":"33"},{"size":990,"mtime":1615567314276,"results":"37","hashOfConfig":"33"},{"size":1356,"mtime":1616187471563,"results":"38","hashOfConfig":"33"},{"size":199,"mtime":1615310821446,"results":"39","hashOfConfig":"33"},{"size":123,"mtime":1615725195663,"results":"40","hashOfConfig":"33"},{"size":1462,"mtime":1616172012236,"results":"41","hashOfConfig":"33"},{"size":856,"mtime":1616528044591,"results":"42","hashOfConfig":"33"},{"size":159,"mtime":1615310821454,"results":"43","hashOfConfig":"33"},{"size":148,"mtime":1615310821455,"results":"44","hashOfConfig":"33"},{"size":1763,"mtime":1616011741641,"results":"45","hashOfConfig":"33"},{"size":2178,"mtime":1616514520924,"results":"46","hashOfConfig":"33"},{"size":2327,"mtime":1616535195983,"results":"47","hashOfConfig":"33"},{"size":260,"mtime":1615367661312,"results":"48","hashOfConfig":"33"},{"size":1506,"mtime":1616535061064,"results":"49","hashOfConfig":"33"},{"size":1695,"mtime":1615310821452,"results":"50","hashOfConfig":"33"},{"size":2132,"mtime":1616195174272,"results":"51","hashOfConfig":"33"},{"size":1494,"mtime":1616526433447,"results":"52","hashOfConfig":"33"},{"size":1461,"mtime":1615667776025,"results":"53","hashOfConfig":"33"},{"size":1958,"mtime":1616501301116,"results":"54","hashOfConfig":"33"},{"size":835,"mtime":1616195550788,"results":"55","hashOfConfig":"33"},{"size":2745,"mtime":1615802535272,"results":"56","hashOfConfig":"33"},{"size":2351,"mtime":1616501325525,"results":"57","hashOfConfig":"33"},{"size":8883,"mtime":1616509645685,"results":"58","hashOfConfig":"33"},{"size":598,"mtime":1615316514513,"results":"59","hashOfConfig":"33"},{"size":1143,"mtime":1615792859340,"results":"60","hashOfConfig":"33"},{"size":457,"mtime":1616496817456,"results":"61","hashOfConfig":"33"},{"size":1962,"mtime":1616532595506,"results":"62","hashOfConfig":"33"},{"size":2746,"mtime":1616531922093,"results":"63","hashOfConfig":"33"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},"13pmjrl",{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"66"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"66"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"66"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"66"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"66"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"66"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"66"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"66"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"66"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"66"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"130"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"66"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"66"},"C:\\Users\\Zabilsya\\Desktop\\Cursovaya\\Calendar\\client\\src\\index.js",[],["141","142"],"C:\\Users\\Zabilsya\\Desktop\\Cursovaya\\Calendar\\client\\src\\App.js",["143"],"C:\\Users\\Zabilsya\\Desktop\\Cursovaya\\Calendar\\client\\src\\reportWebVitals.js",[],"C:\\Users\\Zabilsya\\Desktop\\Cursovaya\\Calendar\\client\\src\\routes.js",[],"C:\\Users\\Zabilsya\\Desktop\\Cursovaya\\Calendar\\client\\src\\hooks\\auth.hook.js",["144"],"import {useState, useCallback, useEffect} from 'react'\r\nimport io from 'socket.io-client'\r\n\r\nconst storageName = 'userData'\r\n\r\nexport const useAuth = () => {\r\n  const [token, setToken] = useState(null)\r\n  const [userId, setUserId] = useState(null)\r\n  const [socket, setSocket] = useState(null)\r\n\r\n  const login = useCallback((jwtToken, id) => {\r\n    setToken(jwtToken)\r\n    setUserId(id)\r\n    setSocket(io())\r\n\r\n    localStorage.setItem(storageName, JSON.stringify({\r\n      userId: id, token: jwtToken\r\n    }))\r\n  }, [])\r\n\r\n\r\n  const logout = useCallback(() => {\r\n    setToken(null)\r\n    setUserId(null)\r\n    localStorage.removeItem(storageName)\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    const data = JSON.parse(localStorage.getItem(storageName))\r\n\r\n    if (data && data.token) {\r\n      login(data.token, data.userId)\r\n    }\r\n  }, [login])\r\n\r\n  useEffect(() => {\r\n    if (socket) {\r\n      socket.emit('enter', userId)\r\n    }\r\n  }, [socket])\r\n\r\n  return {socket, login, logout, token, userId}\r\n}","C:\\Users\\Zabilsya\\Desktop\\Cursovaya\\Calendar\\client\\src\\hooks\\schedule.hook.js",["145"],"import { useEffect, useState } from \"react\"\r\nimport { useRequest } from \"./request.hook\"\r\nimport moment from \"moment\";\r\n\r\nexport const useSchedule = socket => {\r\n  const [events, setEvents] = useState([])\r\n  const request = useRequest(socket)\r\n\r\n  useEffect(() => {\r\n    if (socket) {\r\n      getEvents()\r\n      socket.on('newEvent', message => {\r\n        message.startDt = moment(message.startDt)\r\n        setEvents(events => ([...events, message]))\r\n      })\r\n  \r\n      socket.on('deletedEvent', message => {\r\n        setEvents(events => {\r\n          const newArr = [...events.filter(item => item._id !== message)]\r\n          return newArr\r\n        })\r\n      })\r\n  \r\n      socket.on('updatedEvent', message => {\r\n        message.startDt = moment(message.startDt)\r\n        setEvents(events => {\r\n          const index = events.findIndex(item => item._id === message._id)\r\n          const before = events.slice(0, index);\r\n          const after = events.slice(index + 1);\r\n          const newList = [...before, message, ...after];\r\n          return newList\r\n        })\r\n      })\r\n    }\r\n    \r\n  }, [socket])\r\n\r\n  async function getEvents() {\r\n      let events = false\r\n      events = await request('getEvents')\r\n      events.forEach(item => {\r\n        item.startDt = moment(item.startDt)\r\n      })\r\n      \r\n      setEvents(events)\r\n  }\r\n\r\n  return events\r\n}","C:\\Users\\Zabilsya\\Desktop\\Cursovaya\\Calendar\\client\\src\\context\\AuthContext.js",[],"C:\\Users\\Zabilsya\\Desktop\\Cursovaya\\Calendar\\client\\src\\context\\ScheduleContext.js",[],"C:\\Users\\Zabilsya\\Desktop\\Cursovaya\\Calendar\\client\\src\\Components\\Navigation\\Navigation.js",[],"C:\\Users\\Zabilsya\\Desktop\\Cursovaya\\Calendar\\client\\src\\hooks\\request.hook.js",[],"C:\\Users\\Zabilsya\\Desktop\\Cursovaya\\Calendar\\client\\src\\pages\\PersonalInfoPage\\PersonalInfoPage.js",[],"C:\\Users\\Zabilsya\\Desktop\\Cursovaya\\Calendar\\client\\src\\pages\\SupportPage\\SupportPage.js",[],"C:\\Users\\Zabilsya\\Desktop\\Cursovaya\\Calendar\\client\\src\\pages\\CalendarPage\\CalendarPage.js",[],"C:\\Users\\Zabilsya\\Desktop\\Cursovaya\\Calendar\\client\\src\\pages\\AuthPage\\AuthPage.js",["146","147","148"],"import axios from 'axios';\r\nimport React, {useState, useContext} from 'react'\r\nimport { useRequest } from '../../hooks/request.hook';\r\nimport {AuthContext} from './../../context/AuthContext'\r\nimport URLs from './../../URLs';\r\n\r\nimport './css/style.css'\r\n\r\nexport const AuthPage = () => {\r\n    const auth = useContext(AuthContext)\r\n    const [form, setForm] = useState({\r\n        email: '', password: ''\r\n    });\r\n\r\n    const changeInputHandler = event => {\r\n        setForm({ ...form, [event.target.name]: event.target.value })\r\n    }\r\n\r\n    const loginHandler = async () => {\r\n        let response = await fetch('/api/auth/login', {\r\n            method: 'POST',\r\n            headers: {\r\n              'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(form)\r\n          })\r\n        const result = await response.json()\r\n        if(!response.ok) {\r\n            window.M.toast({html: result.message, classes: \"message\", displayLength: 2000})\r\n            return\r\n        }\r\n        auth.login(result.token, result.userId)\r\n    }\r\n\r\n    return (\r\n        <div className=\"auth\">\r\n            <div className=\"authorization\">\r\n                <h2 className='authorization-title'>Авторизация</h2>\r\n                <div className=\"authorization-content\">\r\n                    <div className=\"form-floating mb-3\">\r\n                        <input type=\"email\" className=\"form-control\" name=\"email\" value={form.email} onChange={changeInputHandler} id=\"floatingInput\" placeholder=\"name@example.com\" />\r\n                        <label htmlFor=\"floatingInput\">Email</label>\r\n                    </div>\r\n                    <div className=\"form-floating form-floating-last\">\r\n                        <input type=\"password\" className=\"form-control\" name=\"password\" value={form.password} onChange={changeInputHandler} id=\"floatingPassword\" placeholder=\"Password\" />\r\n                        <label htmlFor=\"floatingPassword\">Пароль</label>\r\n                    </div>\r\n                    <button type=\"button\" className=\"btn-sign\" onClick={loginHandler}>Войти</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","C:\\Users\\Zabilsya\\Desktop\\Cursovaya\\Calendar\\client\\src\\pages\\PostgraduatesInfoPage\\PostgraduatesInfoPage.js",["149","150","151"],"C:\\Users\\Zabilsya\\Desktop\\Cursovaya\\Calendar\\client\\src\\URLs.js",[],"C:\\Users\\Zabilsya\\Desktop\\Cursovaya\\Calendar\\client\\src\\hooks\\students.hook.js",["152","153"],"C:\\Users\\Zabilsya\\Desktop\\Cursovaya\\Calendar\\client\\src\\pages\\CalendarPage\\CalendarHeader\\CalendarHeader.js",[],"C:\\Users\\Zabilsya\\Desktop\\Cursovaya\\Calendar\\client\\src\\pages\\PostgraduatesInfoPage\\PostgraduatesTable\\PostgraduatesTable.js",["154","155","156"],"import React, { useEffect, useState } from 'react';\r\nimport { useRequest } from './../../../hooks/request.hook'\r\nimport { PostgraduatesTableElement } from './PostgraduatesTableElement/PostgraduatesTableElement'\r\n\r\nimport './css/style.css'\r\n\r\nexport const PostgraduatesTable = ({ students, chooseStudent, chosenStudent }) => {\r\n\r\n    return (\r\n        <>\r\n            {students &&\r\n                <>\r\n                <h2 className=\"main-table-title\">Список аспирантов</h2>\r\n                <div className=\"main-table-header\">\r\n                    <table className=\"table-header table-bordered\">\r\n                        <tr className=\"main-table-header-row\">\r\n                            <th className=\"main-table-header-item\">id</th>\r\n                            <th className=\"main-table-header-item\">Фамилия</th>\r\n                            <th className=\"main-table-header-item\">Имя</th>\r\n                            <th className=\"main-table-header-item\">Отчество</th>\r\n                            <th className=\"main-table-header-item\">Электронная почта</th>\r\n                            <th className=\"main-table-header-item\">Год поступления</th>\r\n                        </tr>\r\n                    </table>\r\n                </div>\r\n                    <div className=\"main-table-wrapper\">\r\n                        <table className=\"table table-bordered\">\r\n                            <tbody>\r\n                                {\r\n                                    students.map((student, count) => (\r\n                                        <PostgraduatesTableElement key={student._id} student={student} count={count + 1} chosenStudent={chosenStudent} onChooseStudent={() => chooseStudent(student)} />\r\n                                    ))\r\n                                }\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                </>\r\n            }\r\n            {students === '' && <h1 className=\"error-title\">Не найдено ни одного аспиранта!</h1>}\r\n        </>\r\n    )\r\n}","C:\\Users\\Zabilsya\\Desktop\\Cursovaya\\Calendar\\client\\src\\pages\\CalendarPage\\CalendarGrid\\CalendarGrid.js",["157","158"],"import React, { useState, useContext } from 'react';\r\nimport moment from 'moment'\r\nimport {CalendarDay} from './../CalendarDay/CalendarDay'\r\n\r\nimport './css/style.css'\r\n\r\nexport const CalendarGrid = ({ startDay, today, events, eventTarget }) => {\r\n    const filteredEvents = events.filter(event => event.startDt.isSame(today, 'month'))\r\n    const totalDays = 42\r\n    const day = startDay.clone().subtract(1, 'day')\r\n    const daysArr = [...Array(totalDays)].map(() => day.add(1, 'day').clone())\r\n    const isCurrentDay = day => moment().isSame(day, 'day')\r\n    const isSelectedMonth = day => today.isSame(day, 'month')\r\n\r\n    return (\r\n        <>\r\n            <div className=\"calendar-grid-header\">\r\n                {[...Array(7)].map((item, index) => (\r\n                    <div className=\"day-of-week\" key={index}>\r\n                        {moment().day(index + 1).format('ddd')}\r\n                    </div>\r\n                ))}\r\n            </div>\r\n            <div className=\"calendar-grid\">\r\n                {\r\n                    daysArr.map((day, index) => {\r\n                        const dayEvents = filteredEvents.filter(event => event.startDt.isSame(day, 'day')).sort((left, right) => left.startDt.diff(right.startDt))\r\n                        return <CalendarDay day={day} dayEvents={dayEvents} isCurrentDay={isCurrentDay} isSelectedMonth={isSelectedMonth} eventTarget={eventTarget} key={index}/>\r\n                    })\r\n                }\r\n            </div>\r\n        </>\r\n    )\r\n}","C:\\Users\\Zabilsya\\Desktop\\Cursovaya\\Calendar\\client\\src\\Components\\ModalStudent\\ModalStudent.js",["159","160"],"import React, { useEffect, useState } from 'react'\r\nimport ReactDOM from 'react-dom';\r\nimport { useRequest } from '../../hooks/request.hook';\r\nimport { Student } from '../Student/Student'\r\n\r\nimport './css/style.css'\r\n\r\nexport const ModalStudent = ({ modalInfo, onClose }) => {\r\n    const { data, title, buttonText } = modalInfo\r\n    const request = useRequest()\r\n\r\n    const onConfirmChanges = async form => {\r\n        switch (buttonText) {\r\n            case 'Добавить':\r\n                await request('addUser', form)\r\n                break\r\n            case 'Сохранить':\r\n                await request('updateUser', form)\r\n                break\r\n            case 'Удалить':\r\n                await request('deleteUser', form)\r\n                break\r\n            default: break\r\n        }\r\n           onClose()\r\n    }\r\n\r\n    return (\r\n        ReactDOM.createPortal(\r\n            <div className=\"overlay\" onClick={onClose}>\r\n                <div className=\"modal\" onClick={e => e.stopPropagation()}>\r\n                    <div className=\"modal-header\">\r\n                        <h2 className=\"modal-title\">{title}</h2>\r\n                        <div className=\"modal-close\" onClick={onClose}></div>\r\n                    </div>\r\n                        <Student data={data} buttonText={buttonText} onConfirm={onConfirmChanges} />\r\n                </div>\r\n            </div>,\r\n            document.getElementById('modal')\r\n        )\r\n    )\r\n}","C:\\Users\\Zabilsya\\Desktop\\Cursovaya\\Calendar\\client\\src\\pages\\CalendarPage\\CalendarDay\\CalendarDay.js",["161","162"],"import React, { useState } from 'react';\r\nimport moment from 'moment'\r\nimport {ModalEvents} from '../../../Components/ModalEvents/ModalEvents'\r\n\r\nimport eventTypes from '../../../data/eventTypes'\r\n\r\nimport './css/style.css'\r\n\r\nexport const CalendarDay = ({day, dayEvents, isCurrentDay, isSelectedMonth, eventTarget}) => {\r\n    const [isOpenModal, setIsOpenModal] = useState(false)\r\n    const events = checkNumberOfEvents()\r\n\r\n    const openModal = () => {\r\n        setIsOpenModal(true)\r\n    }\r\n\r\n    const closeModal = () => {\r\n        setIsOpenModal(false)\r\n    }\r\n\r\n    function checkNumberOfEvents() {\r\n        if (dayEvents.length === 0) {\r\n            return ''\r\n        }\r\n        if (dayEvents.length <= 2) {\r\n            return dayEvents.map(event => (\r\n                <div className=\"event\" style={{background: eventTypes[event.type]}} key={event._id}>\r\n                    {event.name}\r\n                </div>))\r\n        }\r\n        let temp = 0\r\n            return dayEvents.map(event => {\r\n                temp++\r\n                if (temp > 2) return\r\n                return <div className=\"event\" style={{background: eventTypes[event.type]}} key={event._id}>{event.name}</div>\r\n            })\r\n        }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"day\" onClick={isSelectedMonth(day) ? openModal : () => {}} key={day.unix()}>\r\n                <div className={isCurrentDay(day) ? \"number-wrapper current\" : \"number-wrapper\"}>\r\n                    <div className={isSelectedMonth(day) ? \"number\" : \"number not-current\"}>\r\n                        {day.format('D')}\r\n                    </div>\r\n                </div>\r\n                <div className=\"events\">\r\n                    {events}\r\n                </div>\r\n            </div>\r\n            {isOpenModal && \r\n                <ModalEvents title={day.format('LL')} day={day} onClose={closeModal} dayEvents={dayEvents} eventTarget={eventTarget}/>\r\n            }\r\n        </>\r\n    )\r\n}","C:\\Users\\Zabilsya\\Desktop\\Cursovaya\\Calendar\\client\\src\\pages\\PostgraduatesInfoPage\\PostgraduatesTable\\PostgraduatesTableElement\\PostgraduatesTableElement.js",["163","164"],"import React, { useEffect, useState } from 'react';\r\n\r\nimport './css/style.css'\r\n\r\nexport const PostgraduatesTableElement = ({student, onChooseStudent, chosenStudent, count}) => {\r\n    const {_id, name, secondName, thirdName, email, admissionYear} = student\r\n\r\n    return (\r\n        <tr className={chosenStudent ? chosenStudent._id === _id ? \"student-info chosen-student\" : \"student-info\" : \"student-info\" } onClick={onChooseStudent}>\r\n            <td className=\"student-info-item\">{count}</td>\r\n            <td className=\"student-info-item\">{name}</td>\r\n            <td className=\"student-info-item\">{secondName}</td>\r\n            <td className=\"student-info-item\">{thirdName}</td>\r\n            <td className=\"student-info-item\">{email}</td>\r\n            <td className=\"student-info-item\">{admissionYear}</td>\r\n        </tr>\r\n    )\r\n}","C:\\Users\\Zabilsya\\Desktop\\Cursovaya\\Calendar\\client\\src\\Components\\Student\\Student.js",[],"C:\\Users\\Zabilsya\\Desktop\\Cursovaya\\Calendar\\client\\src\\Components\\ModalEvents\\ModalEvents.js",["165","166"],"import React, { useEffect, useState } from 'react'\r\nimport ReactDOM from 'react-dom';\r\nimport moment from \"moment\";\r\nimport { useRequest } from '../../hooks/request.hook';\r\nimport { Event } from '../Event/Event'\r\n\r\nimport './css/style.css'\r\n\r\nexport const ModalEvents = ({ title, day, dayEvents, onClose, eventTarget }) => {\r\n    const [isAdding, setIsAdding] = useState(false)\r\n    const request = useRequest()\r\n\r\n    const changeModalMode = () => {\r\n        setIsAdding(isAdding => !isAdding)\r\n    }\r\n\r\n\r\n    const onConfirmChanges = async (type, form) => {\r\n        // form.startDatetime = moment(form.startDatetime).subtract(5, 'h')\r\n        await request(type, form)\r\n    }\r\n\r\n    return (\r\n        ReactDOM.createPortal(\r\n            <div className=\"overlay\" onClick={onClose}>\r\n                <div className=\"modal\" onClick={e => e.stopPropagation()}>\r\n                    <div className=\"modal-header\">\r\n                        <h2 className=\"modal-title\">{title}</h2>\r\n                        <div className=\"modal-close\" onClick={onClose}></div>\r\n                    </div>\r\n                    <div className=\"modal-body\">\r\n                        {(dayEvents.length !== 0 && !isAdding) &&\r\n                            dayEvents.map(data => (\r\n                                <Event data={data} day={day} reveal={false} changeModalMode={changeModalMode} onConfirmChanges={onConfirmChanges} eventTarget={eventTarget} key={data._id} />\r\n                            ))\r\n                        }\r\n                        {isAdding && <Event data={''} day={day} reveal={true} changeModalMode={changeModalMode} onConfirmChanges={onConfirmChanges} eventTarget={eventTarget} />}\r\n                        {(!isAdding && dayEvents.length === 0) &&\r\n                            <h4 className=\"event-title\">Мероприятий на данный день не запланировано</h4>\r\n                        }\r\n                    </div>\r\n                    {!isAdding &&\r\n                        <div className=\"modal-footer\">\r\n                            <button className=\"modal-footer-button\" onClick={changeModalMode}>Добавить мероприятие</button>\r\n                        </div>\r\n                    }\r\n                </div>\r\n            </div>,\r\n            document.getElementById('modal')\r\n        )\r\n    )\r\n}","C:\\Users\\Zabilsya\\Desktop\\Cursovaya\\Calendar\\client\\src\\Components\\Event\\Event.js",["167","168"],"import React, { useEffect, useState } from 'react'\r\nimport moment from \"moment\";\r\nimport MomentUtils from \"@date-io/moment\";\r\nimport 'date-fns'\r\nimport DateFnsUtils from '@date-io/date-fns'\r\nimport {\r\n    MuiPickersUtilsProvider,\r\n    DatePicker,\r\n    TimePicker\r\n} from '@material-ui/pickers'\r\nimport eventTypes from '../../data/eventTypes'\r\n\r\nimport './css/style.css'\r\n\r\nexport const Event = ({ data, day, reveal, changeModalMode, onConfirmChanges, eventTarget }) => {\r\n    const [form, setForm] = useState({\r\n        _id: '', name: '', description: '', startDt: day, priority: 'low', type: 'Проект', notificationPeriod: '1', info: '', target: eventTarget\r\n    })\r\n    const [eventVisibility, setEventVisibility] = useState(reveal)\r\n    const [editingMode, setEditingMode] = useState(reveal)\r\n    const toggleEventVisibility = () => {\r\n        setEventVisibility(eventVisibility => !eventVisibility)\r\n    }\r\n\r\n    const turnOnEditingMode = () => {\r\n        setEditingMode(true)\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (data) {\r\n            setForm(prev => ({\r\n                _id: data._id,\r\n                name: data.name,\r\n                description: data.description,\r\n                startDt: data.startDt,\r\n                priority: data.priority,\r\n                type: data.type,\r\n                notificationPeriod: data.notificationPeriod,\r\n                info: data.info,\r\n                target: prev.target\r\n            }))\r\n        }\r\n        if (reveal) {\r\n            setEventVisibility(true)\r\n            turnOnEditingMode()\r\n        }\r\n    }, [data])\r\n\r\n    const changeInputHandler = event => {\r\n        setForm({ ...form, [event.target.name]: event.target.value })\r\n    }\r\n\r\n    const changeStartDateHandler = date => {\r\n        setForm({ ...form, startDt: date })\r\n    }\r\n\r\n    const cancelAdding = () => {\r\n        if (reveal) changeModalMode()\r\n        else {\r\n            setEditingMode(false)\r\n            setForm({\r\n                _id: data._id,\r\n                name: data.name,\r\n                description: data.description,\r\n                startDt: data.startDt,\r\n                priority: data.priority,\r\n                type: data.type,\r\n                notificationPeriod: data.notificationPeriod,\r\n                info: data.info\r\n            })\r\n        }\r\n    }\r\n\r\n    const saveChanges = () => {\r\n        if (reveal) {\r\n            onConfirmChanges('addEvent', form)\r\n            changeModalMode()\r\n        }\r\n        else {\r\n            onConfirmChanges('updateEvent', form)\r\n            setEditingMode(false)\r\n        }\r\n    }\r\n\r\n    const deleteEvent = () => {\r\n        onConfirmChanges('deleteEvent', form)\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            {!reveal ?\r\n                <div className=\"event-line\" onClick={toggleEventVisibility} style={{ background: eventTypes[form.type] }}>\r\n                    <div className=\"event-time\">\r\n                        {moment(form.startDt).format('HH:mm')}\r\n                    </div>\r\n                    <div className=\"event-name\">\r\n                        {data.name}\r\n                    </div>\r\n                    <div className={eventVisibility ? 'arrow top' : 'arrow down'}></div>\r\n                </div> :\r\n                <h3>Новое мероприятие:</h3>\r\n            }\r\n\r\n            <div className={eventVisibility ? 'event-wrapper show' : 'event-wrapper hide'}>\r\n                <div className=\"form-floating mb-3\">\r\n                    <input type=\"text\" className=\"form-control\" name=\"name\" value={form.name} onChange={changeInputHandler} readOnly={!editingMode} />\r\n                    <label htmlFor=\"name\">Название события</label>\r\n                </div>\r\n                <div className=\"select\">\r\n                    <label htmlFor=\"type\">Тип события</label>\r\n                    <select className=\"custom-select\" name=\"type\" value={form.type} onChange={changeInputHandler} disabled={!editingMode}>\r\n                        <option value=\"Проект\">Проект</option>\r\n                        <option value=\"Экзамен\">Экзамен</option>\r\n                        <option value=\"Зачет\">Зачёт</option>\r\n                        <option value=\"Практика\">Практика</option>\r\n                        <option value=\"Научное_исследование\">Научное исследование</option>\r\n                        <option value=\"Государственная_итоговая_аттестация\">Государственная итоговая аттестация</option>\r\n                        <option value=\"Конференция\">Конференция</option>\r\n                        <option value=\"Мастер_класс\">Мастер-класс</option>\r\n                        <option value=\"Другое\">Другое</option>\r\n                    </select>\r\n                </div>\r\n\r\n                <div className=\"form-floating mb-3 data time\">\r\n                    <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                        <DatePicker\r\n                            readOnly={!editingMode}\r\n                            variant=\"inline\"\r\n                            ampm={false}\r\n                            label=\"Дата\"\r\n                            value={form.startDt}\r\n                            onChange={changeStartDateHandler}\r\n                            disablePast\r\n                            format=\"dd/MM/yyyy\"\r\n                        />\r\n                        <TimePicker\r\n                            readOnly={!editingMode}\r\n                            ampm={false}\r\n                            label=\"Время\"\r\n                            value={form.startDt}\r\n                            onChange={changeStartDateHandler}\r\n                        />\r\n                    </MuiPickersUtilsProvider>\r\n                </div>\r\n                <h6 className=\"label\">Приоритет</h6>\r\n                <div className=\"form-floating mb-3 data priority\">\r\n                    <div className=\"form-check low\">\r\n                        <input className=\"form-check-input\" type=\"radio\" onChange={changeInputHandler} value=\"low\" checked={form.priority === \"low\"} name=\"priority\" id=\"lowRadio\" disabled={!editingMode} />\r\n                        <label className=\"form-check-label\" htmlFor=\"lowRadio\">\r\n                            Низкий\r\n                    </label>\r\n                    </div>\r\n                    <div className=\"form-check medium\">\r\n                        <input className=\"form-check-input\" type=\"radio\" onChange={changeInputHandler} value=\"medium\" checked={form.priority === \"medium\"} name=\"priority\" id=\"mediumRadio\" disabled={!editingMode} />\r\n                        <label className=\"form-check-label\" htmlFor=\"mediumRadio\">\r\n                            Средний\r\n                    </label>\r\n                    </div>\r\n                    <div className=\"form-check high\">\r\n                        <input className=\"form-check-input\" type=\"radio\" onChange={changeInputHandler} value=\"high\" checked={form.priority === \"high\"} name=\"priority\" id=\"highRadio\" disabled={!editingMode} />\r\n                        <label className=\"form-check-label\" htmlFor=\"highRadio\">\r\n                            Высокий\r\n                    </label>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"select\">\r\n                    <label htmlFor=\"notificationPeriod\">Частота напоминания</label>\r\n                    <select className=\"custom-select\" name=\"notificationPeriod\" id=\"notificationPeriod\" value={form.notificationPeriod.toString()} onChange={changeInputHandler} disabled={!editingMode}>\r\n                        <option value=\"1\">Каждый день</option>\r\n                        <option value=\"7\">Каждую неделю</option>\r\n                        <option value=\"30\">Каждый месяц</option>\r\n                    </select>\r\n                </div>\r\n\r\n                {/* <div className=\"form-floating mb-3\">\r\n                    <textarea type=\"text\" id=\"description\" className=\"form-control description\" name=\"description\" value={form.description} onChange={changeInputHandler} readOnly={!editingMode} />\r\n                    \r\n                </div> */}\r\n\r\n                <div className={eventVisibility ? 'modal-buttons show' : 'modal-buttons hide'}>\r\n                    <button className=\"modal-footer-button\" onClick={editingMode ? saveChanges : turnOnEditingMode}>{editingMode ? 'Сохранить' : 'Редактировать'}</button>\r\n                    <button className=\"modal-footer-button\" onClick={editingMode ? cancelAdding : deleteEvent}>{editingMode ? 'Отменить' : 'Удалить'}</button>\r\n                </div>\r\n\r\n            </div>\r\n\r\n        </>\r\n    )\r\n}","C:\\Users\\Zabilsya\\Desktop\\Cursovaya\\Calendar\\client\\src\\Components\\Dropdown\\Dropdown.js",["169","170"],"import React, { useEffect, useState } from 'react'\r\n\r\nimport './css/style.css'\r\n\r\nexport const Dropdown = ({options}) => {\r\n\r\n    return (\r\n        <div className=\"dropdown\">\r\n            <div className=\"control\">\r\n            <div className=\"selected-value\">kek</div>\r\n            <div className=\"arrow\"/>\r\n            </div>\r\n            <div className=\"options\">\r\n                {\r\n                    options.map(option => \r\n                        <div className=\"option\">{option.name}</div>\r\n                    )\r\n                }\r\n            </div>\r\n           \r\n        </div>\r\n    )\r\n}",["171","172"],"C:\\Users\\Zabilsya\\Desktop\\Cursovaya\\Calendar\\client\\src\\scripts\\script.js",[],"C:\\Users\\Zabilsya\\Desktop\\Cursovaya\\Calendar\\client\\src\\data\\eventTypes.js",[],"C:\\Users\\Zabilsya\\Desktop\\Cursovaya\\Calendar\\client\\src\\Components\\NotificationMenu\\NotificationMenu.js",["173","174","175"],"import React, { useContext, useEffect, useState } from 'react'\r\nimport { useNotifications } from '../../hooks/notification.hook'\r\nimport { useRequest } from '../../hooks/request.hook'\r\n\r\nimport './css/style.css'\r\n\r\nexport const NotificationMenu = ({socket, userId}) => {\r\n    const [showMenu, setShowMenu] = useState(false)\r\n    const {notifications, viewNotification} = useNotifications(socket, userId)\r\n    const toggleMenu = () => {\r\n        setShowMenu(showMenu => !showMenu)\r\n    }\r\n\r\n    let notViewedNotifications = 0\r\n\r\n    return (\r\n        <>\r\n        {showMenu && <div className=\"overlay\" onClick={toggleMenu}></div>}\r\n            <div className={showMenu ? \"notification-menu menu-open\" : \"notification-menu\"}>\r\n                {\r\n                    notifications.sort((left, right) => right.createDt.diff(left.createDt)).map((item, index) => {\r\n                        const viewed = item.viewers.contains(userId)\r\n                        if (!viewed) notViewedNotifications++ \r\n                        return (\r\n                        <div className={viewed ? \"notification\" : \"notification not-viewed\"} onClick={() => viewNotification(item)} key={index}>\r\n                            <div className=\"notification-time\">{item.createDt.format('D MMMM YYYY, HH:mm')}</div>\r\n                            <div className=\"notification-message\">{item.type}</div>\r\n                            <div className=\"notification-event\">{item.eventName}</div>\r\n                        </div>\r\n                    )})\r\n                }\r\n              \r\n            </div>\r\n            <span className={showMenu ? \"material-icons notification-icon icon-open\" : \"material-icons notification-icon\"} onClick={toggleMenu}>notifications</span>\r\n            {notViewedNotifications && \r\n                <span className={showMenu ? \"icon-missed icon-missed-open\" : \"icon-missed\"} onClick={toggleMenu}>{notViewedNotifications}</span>\r\n            }\r\n        </>\r\n    )\r\n}","C:\\Users\\Zabilsya\\Desktop\\Cursovaya\\Calendar\\client\\src\\hooks\\notification.hook.js",["176","177","178"],"import { useContext, useEffect, useState } from \"react\"\r\nimport { useRequest } from \"./request.hook\"\r\nimport moment from \"moment\";\r\nimport { ScheduleContext } from \"../context/ScheduleContext\";\r\nimport { toast } from 'react-toastify'\r\nimport 'react-toastify/dist/ReactToastify.css'\r\n\r\ntoast.configure()\r\n\r\nexport const useNotifications = (socket, userId) => {\r\n  const [notifications, setNotifications] = useState([])\r\n  const request = useRequest(socket)\r\n  \r\n  const viewNotification = async item => {\r\n    await request('viewNotification', item)\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (socket) {\r\n        getNotifications()\r\n        socket.on('newNotification', message => {\r\n            message.createDt = moment(message.createDt)\r\n            message.type = createNotificationMessage(message)\r\n            setNotifications(notifications => ([message, ...notifications]))\r\n            toast(`${message.type}: ${message.eventName}`, {\r\n              position: toast.POSITION.TOP_LEFT\r\n          })\r\n        })\r\n        socket.on('viewNotification', message => {\r\n          message.createDt = moment(message.createDt)\r\n          message.type = createNotificationMessage(message)\r\n          setNotifications(notifications => {\r\n            const index = notifications.findIndex(item => item._id === notifications._id)\r\n            const before = notifications.slice(0, index);\r\n            const after = notifications.slice(index + 1);\r\n            const newList = [...before, notifications, ...after];\r\n            return newList\r\n          })\r\n        })\r\n    }\r\n      \r\n    }, [socket])\r\n\r\n  async function getNotifications() {\r\n      let notifications = false\r\n      notifications = await request('getNotifications')\r\n      notifications.forEach(item => {\r\n        item.createDt = moment(item.createDt)\r\n        item.type = createNotificationMessage(item)\r\n        // if (!item.viewers.contains(userId)) {\r\n        //   toast(`${item.type}: ${item.eventName}`, {\r\n        //     position: toast.POSITION.TOP_LEFT\r\n        // })\r\n        // }\r\n      })\r\n      setNotifications(notifications)\r\n  }\r\n\r\n  function createNotificationMessage(item) {\r\n    let message\r\n      switch (item.type) {\r\n        case 'insert':\r\n          message = 'Добавлено новое событие'\r\n        break\r\n        case 'update':\r\n          message = 'Изменена информация о событии'\r\n          break\r\n        case 'delete':\r\n          message = 'Было удалено событие'\r\n          break\r\n        default:\r\n          message = `Напоминание. Осталось ${item.daysLeft} дней до начала события`\r\n      }\r\n      return message\r\n  }\r\n\r\n  return {notifications, viewNotification}\r\n}",{"ruleId":"179","replacedBy":"180"},{"ruleId":"181","replacedBy":"182"},{"ruleId":"183","severity":1,"message":"184","line":10,"column":10,"nodeType":"185","messageId":"186","endLine":10,"endColumn":26},{"ruleId":"187","severity":1,"message":"188","line":40,"column":6,"nodeType":"189","endLine":40,"endColumn":14,"suggestions":"190"},{"ruleId":"187","severity":1,"message":"191","line":36,"column":6,"nodeType":"189","endLine":36,"endColumn":14,"suggestions":"192"},{"ruleId":"183","severity":1,"message":"193","line":1,"column":8,"nodeType":"185","messageId":"186","endLine":1,"endColumn":13},{"ruleId":"183","severity":1,"message":"194","line":3,"column":10,"nodeType":"185","messageId":"186","endLine":3,"endColumn":20},{"ruleId":"183","severity":1,"message":"195","line":5,"column":8,"nodeType":"185","messageId":"186","endLine":5,"endColumn":12},{"ruleId":"183","severity":1,"message":"196","line":1,"column":27,"nodeType":"185","messageId":"186","endLine":1,"endColumn":36},{"ruleId":"183","severity":1,"message":"197","line":1,"column":38,"nodeType":"185","messageId":"186","endLine":1,"endColumn":48},{"ruleId":"183","severity":1,"message":"198","line":6,"column":10,"nodeType":"185","messageId":"186","endLine":6,"endColumn":21},{"ruleId":"183","severity":1,"message":"199","line":1,"column":8,"nodeType":"185","messageId":"186","endLine":1,"endColumn":13},{"ruleId":"187","severity":1,"message":"200","line":39,"column":6,"nodeType":"189","endLine":39,"endColumn":14,"suggestions":"201"},{"ruleId":"183","severity":1,"message":"196","line":1,"column":17,"nodeType":"185","messageId":"186","endLine":1,"endColumn":26},{"ruleId":"183","severity":1,"message":"202","line":1,"column":28,"nodeType":"185","messageId":"186","endLine":1,"endColumn":36},{"ruleId":"183","severity":1,"message":"194","line":2,"column":10,"nodeType":"185","messageId":"186","endLine":2,"endColumn":20},{"ruleId":"183","severity":1,"message":"202","line":1,"column":17,"nodeType":"185","messageId":"186","endLine":1,"endColumn":25},{"ruleId":"183","severity":1,"message":"197","line":1,"column":27,"nodeType":"185","messageId":"186","endLine":1,"endColumn":37},{"ruleId":"183","severity":1,"message":"196","line":1,"column":17,"nodeType":"185","messageId":"186","endLine":1,"endColumn":26},{"ruleId":"183","severity":1,"message":"202","line":1,"column":28,"nodeType":"185","messageId":"186","endLine":1,"endColumn":36},{"ruleId":"183","severity":1,"message":"203","line":2,"column":8,"nodeType":"185","messageId":"186","endLine":2,"endColumn":14},{"ruleId":"204","severity":1,"message":"205","line":34,"column":31,"nodeType":"206","messageId":"207","endLine":34,"endColumn":37},{"ruleId":"183","severity":1,"message":"196","line":1,"column":17,"nodeType":"185","messageId":"186","endLine":1,"endColumn":26},{"ruleId":"183","severity":1,"message":"202","line":1,"column":28,"nodeType":"185","messageId":"186","endLine":1,"endColumn":36},{"ruleId":"183","severity":1,"message":"196","line":1,"column":17,"nodeType":"185","messageId":"186","endLine":1,"endColumn":26},{"ruleId":"183","severity":1,"message":"203","line":3,"column":8,"nodeType":"185","messageId":"186","endLine":3,"endColumn":14},{"ruleId":"183","severity":1,"message":"208","line":3,"column":8,"nodeType":"185","messageId":"186","endLine":3,"endColumn":19},{"ruleId":"187","severity":1,"message":"209","line":47,"column":8,"nodeType":"189","endLine":47,"endColumn":14,"suggestions":"210"},{"ruleId":"183","severity":1,"message":"196","line":1,"column":17,"nodeType":"185","messageId":"186","endLine":1,"endColumn":26},{"ruleId":"183","severity":1,"message":"202","line":1,"column":28,"nodeType":"185","messageId":"186","endLine":1,"endColumn":36},{"ruleId":"179","replacedBy":"211"},{"ruleId":"181","replacedBy":"212"},{"ruleId":"183","severity":1,"message":"197","line":1,"column":17,"nodeType":"185","messageId":"186","endLine":1,"endColumn":27},{"ruleId":"183","severity":1,"message":"196","line":1,"column":29,"nodeType":"185","messageId":"186","endLine":1,"endColumn":38},{"ruleId":"183","severity":1,"message":"194","line":3,"column":10,"nodeType":"185","messageId":"186","endLine":3,"endColumn":20},{"ruleId":"183","severity":1,"message":"197","line":1,"column":10,"nodeType":"185","messageId":"186","endLine":1,"endColumn":20},{"ruleId":"183","severity":1,"message":"213","line":4,"column":10,"nodeType":"185","messageId":"186","endLine":4,"endColumn":25},{"ruleId":"187","severity":1,"message":"214","line":42,"column":8,"nodeType":"189","endLine":42,"endColumn":16,"suggestions":"215"},"no-native-reassign",["216"],"no-negated-in-lhs",["217"],"no-unused-vars","'useNotifications' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'userId'. Either include it or remove the dependency array.","ArrayExpression",["218"],"React Hook useEffect has a missing dependency: 'getEvents'. Either include it or remove the dependency array.",["219"],"'axios' is defined but never used.","'useRequest' is defined but never used.","'URLs' is defined but never used.","'useEffect' is defined but never used.","'useContext' is defined but never used.","'useStudents' is defined but never used.","'React' is defined but never used.","React Hook useEffect has a missing dependency: 'getStudents'. Either include it or remove the dependency array.",["220"],"'useState' is defined but never used.","'moment' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ReturnStatement","expectedReturnValue","'MomentUtils' is defined but never used.","React Hook useEffect has a missing dependency: 'reveal'. Either include it or remove the dependency array.",["221"],["216"],["217"],"'ScheduleContext' is defined but never used.","React Hook useEffect has a missing dependency: 'getNotifications'. Either include it or remove the dependency array.",["222"],"no-global-assign","no-unsafe-negation",{"desc":"223","fix":"224"},{"desc":"225","fix":"226"},{"desc":"227","fix":"228"},{"desc":"229","fix":"230"},{"desc":"231","fix":"232"},"Update the dependencies array to be: [socket, userId]",{"range":"233","text":"234"},"Update the dependencies array to be: [getEvents, socket]",{"range":"235","text":"236"},"Update the dependencies array to be: [getStudents, socket]",{"range":"237","text":"238"},"Update the dependencies array to be: [data, reveal]",{"range":"239","text":"240"},"Update the dependencies array to be: [getNotifications, socket]",{"range":"241","text":"242"},[927,935],"[socket, userId]",[1097,1105],"[getEvents, socket]",[1277,1285],"[getStudents, socket]",[1569,1575],"[data, reveal]",[1578,1586],"[getNotifications, socket]"]